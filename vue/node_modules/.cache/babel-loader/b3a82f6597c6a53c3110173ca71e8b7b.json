{"remainingRequest":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Home.vue?vue&type=template&id=e0eea426","dependencies":[{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Home.vue","mtime":1641564095931},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/babel.config.js","mtime":1641563910552},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB2TW9kZWxDaGVja2JveCBhcyBfdk1vZGVsQ2hlY2tib3gsIHdpdGhNb2RpZmllcnMgYXMgX3dpdGhNb2RpZmllcnMsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImJ0bi1jb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8yID0gWyJkaXNhYmxlZCJdOwp2YXIgX2hvaXN0ZWRfMyA9IFsiZGlzYWJsZWQiXTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJsaXN0LWdyb3VwIgp9Owp2YXIgX2hvaXN0ZWRfNSA9IFsib25DbGljayJdOwp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogImZvcm0tY2hlY2siCn07CnZhciBfaG9pc3RlZF83ID0gWyJ2YWx1ZSIsICJpZCJdOwp2YXIgX2hvaXN0ZWRfOCA9IHsKICBjbGFzczogInRlc3QtbGFiZWwiCn07CnZhciBfaG9pc3RlZF85ID0gewogIGNsYXNzOiAibW9kYWwgZmFkZSIsCiAgaWQ6ICJNb2RhbCIsCiAgdGFiaW5kZXg6ICItMSIsCiAgImFyaWEtbGFiZWxsZWRieSI6ICJNb2RhbExhYmVsIiwKICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKfTsKdmFyIF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAibW9kYWwtZGlhbG9nIgp9Owp2YXIgX2hvaXN0ZWRfMTEgPSB7CiAgY2xhc3M6ICJtb2RhbC1jb250ZW50Igp9OwoKdmFyIF9ob2lzdGVkXzEyID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogIm1vZGFsLWhlYWRlciIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoNSIsIHsKICBjbGFzczogIm1vZGFsLXRpdGxlIiwKICBpZDogIk1vZGFsTGFiZWwiCn0sICJBZGQgYSBuZXcgUHJvamVjdCIpXSwgLTEpOwoKdmFyIF9ob2lzdGVkXzEzID0gewogIGNsYXNzOiAibW9kYWwtYm9keSIKfTsKdmFyIF9ob2lzdGVkXzE0ID0gewogIGNsYXNzOiAiZm9ybS1vdXRsaW5lIG1iLTQiCn07CnZhciBfaG9pc3RlZF8xNSA9IHsKICB0eXBlOiAiZmlsZSIsCiAgd2Via2l0ZGlyZWN0b3J5OiAiIiwKICBtb3pkaXJlY3Rvcnk6ICIiLAogIGlkOiAicHJvamVjdC1pbnB1dCIsCiAgcmVmOiAiZmlsZXMiCn07CnZhciBfaG9pc3RlZF8xNiA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJidG4tY29udGFpbmVyIgp9OwoKdmFyIF9ob2lzdGVkXzE3ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogInNwaW5uZXItYm9yZGVyIHRleHQtcHJpbWFyeSBzcGlubmVyIgp9LCBudWxsLCAtMSk7Cgp2YXIgX2hvaXN0ZWRfMTggPSBbX2hvaXN0ZWRfMTddOwp2YXIgX2hvaXN0ZWRfMTkgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAidXBsb2FkLW1lc3NhZ2UiCn07CnZhciBfaG9pc3RlZF8yMCA9IHsKICB0eXBlOiAiYnV0dG9uIiwKICBjbGFzczogImJ0biBidG4tcHJpbWFyeSBoaWRkZW4iLAogICJkYXRhLW1kYi1kaXNtaXNzIjogIm1vZGFsIiwKICBpZDogImRpc21pc3MtYnRuIiwKICByZWY6ICJkaXNtaXNzQnRuIgp9Owp2YXIgX2hvaXN0ZWRfMjEgPSB7CiAgY2xhc3M6ICJidG4tY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfMjIgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAic3Bpbm5lci1ib3JkZXIgdGV4dC1wcmltYXJ5IHNwaW5uZXIiLAogIGlkOiAic3Bpbm5lciIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9yb3V0ZXJfbGluayA9IF9yZXNvbHZlQ29tcG9uZW50KCJyb3V0ZXItbGluayIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIHR5cGU6ICJidXR0b24iLAogICAgY2xhc3M6ICJidG4gYnRuLXByaW1hcnkiLAogICAgImRhdGEtbWRiLXRvZ2dsZSI6ICJtb2RhbCIsCiAgICAiZGF0YS1tZGItdGFyZ2V0IjogIiNNb2RhbCIsCiAgICBpZDogImFkZC1idG4tTW9kYWwiLAogICAgZGlzYWJsZWQ6ICRkYXRhLmxvYWRpbmcKICB9LCAiIEFkZCBhIG5ldyBwcm9qZWN0ICIsIDgsIF9ob2lzdGVkXzIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIGNsYXNzOiAiYnRuIGJ0bi1kYW5nZXIiLAogICAgaWQ6ICJkZWxldGUtcHJvamVjdCIsCiAgICBkaXNhYmxlZDogISRvcHRpb25zLmVuYWJsZURlbGV0ZSwKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZGVsZXRlUHJvamVjdHMgJiYgJG9wdGlvbnMuZGVsZXRlUHJvamVjdHMuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICIgRGVsZXRlICIsIDgsIF9ob2lzdGVkXzMpXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnByb2plY3RzLCBmdW5jdGlvbiAocHJvamVjdCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiYSIsIHsKICAgICAga2V5OiBwcm9qZWN0LAogICAgICBjbGFzczogImxpc3QtZ3JvdXAtaXRlbSBsaXN0LWdyb3VwLWl0ZW0tYWN0aW9uIiwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMubmF2aWdhdGVUb1Byb2plY3QocHJvamVjdCk7CiAgICAgIH0KICAgIH0sIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgICBjbGFzczogImZvcm0tY2hlY2staW5wdXQiLAogICAgICB0eXBlOiAiY2hlY2tib3giLAogICAgICB2YWx1ZTogcHJvamVjdCwKICAgICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJGRhdGEubWFya2VkUHJvamVjdHMgPSAkZXZlbnQ7CiAgICAgIH0pLAogICAgICBpZDogcHJvamVjdCwKICAgICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBfd2l0aE1vZGlmaWVycyhmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLnN0b3BUaGVFdmVudCAmJiAkb3B0aW9ucy5zdG9wVGhlRXZlbnQuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICAgIH0sIFsic3RvcCJdKSkKICAgIH0sIG51bGwsIDgsIF9ob2lzdGVkXzcpLCBbW192TW9kZWxDaGVja2JveCwgJGRhdGEubWFya2VkUHJvamVjdHNdXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICAgIHRvOiB7CiAgICAgICAgbmFtZTogJ1Byb2plY3QnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IHByb2plY3QKICAgICAgICB9CiAgICAgIH0KICAgIH0sIHsKICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgibGFiZWwiLCBfaG9pc3RlZF84LCBfdG9EaXNwbGF5U3RyaW5nKHByb2plY3QpLCAxKV07CiAgICAgIH0pLAogICAgICBfOiAyCiAgICB9LCAxMDMyLCBbInRvIl0pXSldLCA4LCBfaG9pc3RlZF81KTsKICB9KSwgMTI4KSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTEsIFtfaG9pc3RlZF8xMiwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTMsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJmb3JtIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE0LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCBfaG9pc3RlZF8xNSwgbnVsbCwgNTEyKV0pLCAkZGF0YS51cGxvYWRpbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xNiwgX2hvaXN0ZWRfMTgpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpLCAhJGRhdGEudXBsb2FkaW5nID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTksICIgUGxlYXNlIG1ha2Ugc3VyZSBhbGwgbmFtZXMgZG9uJ3QgaW5jbHVkZSBibGFuayBzcGFjZXMgIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSksICEkZGF0YS51cGxvYWRpbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDIsCiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIGNsYXNzOiAiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIsCiAgICBpZDogImFkZC1idG4iLAogICAgb25DbGljazogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy51cGxvYWQgJiYgJG9wdGlvbnMudXBsb2FkLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiIEFkZCAiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCBfaG9pc3RlZF8yMCwgbnVsbCwgNTEyKV0pXSldKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yMSwgWyRkYXRhLmxvYWRpbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yMikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSldKV0pOwp9"},{"version":3,"sources":["/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"btn-container\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary\"\n        data-mdb-toggle=\"modal\"\n        data-mdb-target=\"#Modal\"\n        id=\"add-btn-Modal\"\n        :disabled=\"loading\"\n      >\n        Add a new project\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        id=\"delete-project\"\n        :disabled=\"!enableDelete\"\n        @click=\"deleteProjects\"\n      >\n        Delete\n      </button>\n    </div>\n    <div class=\"list-group\">\n      <a\n        v-for=\"project in projects\"\n        :key=\"project\"\n        class=\"list-group-item list-group-item-action\"\n        @click=\"navigateToProject(project)\"\n      >\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            :value=\"project\"\n            v-model=\"markedProjects\"\n            :id=\"project\"\n            @click.stop=\"stopTheEvent\"\n          />\n          <router-link :to=\"{ name: 'Project', params: { id: project } }\">\n            <label class=\"test-label\">{{ project }}</label>\n          </router-link>\n        </div>\n      </a>\n    </div>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"Modal\"\n      tabindex=\"-1\"\n      aria-labelledby=\"ModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"ModalLabel\">Add a new Project</h5>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"file\"\n                  webkitdirectory\n                  mozdirectory\n                  id=\"project-input\"\n                  ref=\"files\"\n                />\n              </div>\n              <div v-if=\"uploading\" class=\"btn-container\">\n                <div class=\"spinner-border text-primary spinner\"></div>\n              </div>\n              <div class=\"upload-message\" v-if=\"!uploading\">\n                Please make sure all names don't include blank spaces\n              </div>\n              <!-- Submit button -->\n              <button\n                type=\"button\"\n                class=\"btn btn-primary btn-block\"\n                id=\"add-btn\"\n                @click=\"upload\"\n                v-if=\"!uploading\"\n              >\n                Add\n              </button>\n            </form>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary hidden\"\n              data-mdb-dismiss=\"modal\"\n              id=\"dismiss-btn\"\n              ref=\"dismissBtn\"\n            ></button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"btn-container\">\n      <div\n        v-if=\"loading\"\n        class=\"spinner-border text-primary spinner\"\n        id=\"spinner\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Home\",\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"update\"],\n  data() {\n    return {\n      projects: [],\n      loading: false,\n      files: null,\n      socketIntv: null,\n      markedProjects: [],\n      projectId: \"\",\n      uploading: false,\n    };\n  },\n  methods: {\n    init() {\n      fetch(this.url, { method: \"POST\", body: JSON.stringify({ command: 3 }) })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.projects = data.projects;\n            //console.log(data);\n          } else {\n            this.$emit(\"info\", \"Could not connect to server\", \"red\");\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.socket.on(this.openfaasUrl + \"_project_upload\", (msg) => {\n        this.projects.push(msg);\n      });\n      this.socket.on(this.openfaasUrl + \"_project_delete\", (msg) => {\n        this.projects = this.projects.filter(\n          (project) => !msg.includes(project)\n        );\n      });\n    },\n    upload() {\n      const files = this.$refs.files.files;\n      if (files.length < 1) {\n        this.$emit(\"info\", \"Please select a directory to upload\", \"red\");\n        return false;\n      }\n      var data = new FormData();\n      for (var i = 0; i < files.length; i++) {\n        data.append(\"file\" + i, files[i]);\n      }\n      this.uploading = true;\n      fetch(this.url, { method: \"POST\", body: data })\n        .then((data) => data.json())\n        .then((data) => {\n          this.uploading = false;\n\n          this.$refs.dismissBtn.click();\n          //console.log(data);\n          if (data.success) {\n            this.loading = true;\n            this.projectId = data.task_id;\n            this.socketIntv = setInterval(() => {\n              this.socket.emit(\"task_stats\", {\n                project_name: this.projectId,\n                openfaasurl: this.openfaasUrl,\n              });\n            }, 1000);\n            this.socket.on(this.projectId, (message) => {\n              //console.log(message);\n              const data = JSON.parse(message.data);\n              if (!data.success) {\n                //console.log(\"Something went wrong\");\n                this.loading = false;\n                this.$emit(\"info\", \"Something went wrong\", \"red\");\n                clearInterval(this.socketIntv);\n              } else if (data.status_code === 3) {\n                //console.log(\"thread is locking\");\n              } else if (data.status_code === 2) {\n                //console.log(\"installing project\");\n              } else if (data.status_code === 1) {\n                //console.log(\"installing failed\");\n                clearInterval(this.socketIntv);\n                this.loading = false;\n                this.$emit(\"info\", \"Installation failed\", \"red\", data.error);\n              } else {\n                //console.log(\"Task is finished\");\n                clearInterval(this.socketIntv);\n                this.$router.push({\n                  name: \"Project\",\n                  params: { id: this.projectId },\n                });\n                this.socket.emit(\"project_upload\", {\n                  openfaasurl: this.openfaasUrl,\n                  project_name: this.projectId,\n                });\n              }\n            });\n          } else {\n            this.uploading = false;\n            this.loading = false;\n            this.$emit(\"info\", data.message, \"red\");\n          }\n        })\n        .catch(() => {\n          this.$refs.dismissBtn.click();\n          this.uploading = false;\n          this.loading = false;\n          this.$emit(\"info\", \"Something went wrong\", \"red\");\n        });\n      return false;\n    },\n    deleteProjects() {\n      this.$root.setUpConfirmation(\n        \"Are you sure you want to delete these projects?\",\n        \"Delete\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({ command: 10, names: this.markedProjects }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.socket.emit(\"project_delete\", {\n                  openfaasurl: this.openfaasUrl,\n                  project_names: this.markedProjects,\n                });\n                this.projects = this.projects.filter(\n                  (project) => !this.markedProjects.includes(project)\n                );\n                this.markedProjects = [];\n              }else{\n                this.$emit(\"info\", data.message, \"red\");\n              }\n            })\n            .catch(() => {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n          return false;\n        }\n      );\n    },\n    navigateToProject(project) {\n      this.$router.push({ name: \"Project\", params: { id: project } });\n    },\n    freeSocket() {\n      this.socket.off(this.projectId);\n      this.socket.off(this.openfaasUrl + \"_project_upload\");\n      this.socket.off(this.openfaasUrl + \"_project_delete\");\n      if (this.socketIntv) clearInterval(this.socketIntv);\n    },\n    stopTheEvent(event) {\n      event.stopPropagation();\n    },\n  },\n  computed: {\n    enableDelete() {\n      return this.markedProjects.length > 0;\n    },\n  },\n  beforeUnmount() {\n    this.freeSocket();\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.freeSocket();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n"],"sourceRoot":""}]}