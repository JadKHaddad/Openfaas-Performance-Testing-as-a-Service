{"remainingRequest":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Control.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Control.vue","mtime":1641563910572},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/babel.config.js","mtime":1641563910552},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCBUZXN0IGZyb20gIkAvY29tcG9uZW50cy9UZXN0LnZ1ZSI7CmltcG9ydCBJbnN0YWxsYXRpb25Qcm9jZXNzIGZyb20gIkAvY29tcG9uZW50cy9JbnN0YWxsYXRpb25Qcm9jZXNzLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ29udHJvbCIsCiAgY29tcG9uZW50czogewogICAgVGVzdDogVGVzdCwKICAgIEluc3RhbGxhdGlvblByb2Nlc3M6IEluc3RhbGxhdGlvblByb2Nlc3MKICB9LAogIHByb3BzOiBbInVybCIsICJvcGVuZmFhc1VybCIsICJzb2NrZXQiLCAibWluaW1pemVUZXN0cyIsICJ1cGRhdGUiXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVzdHM6IHt9LAogICAgICBwcm9qZWN0czogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnNvY2tldC5vZmYodGhpcy5vcGVuZmFhc1VybCArICJfY29udHJvbCIpOwogICAgICB0aGlzLnNvY2tldC5lbWl0KCJyZWdpc3Rlcl9jb250cm9sIiwgewogICAgICAgIG9wZW5mYWFzdXJsOiB0aGlzLm9wZW5mYWFzVXJsCiAgICAgIH0pOwogICAgICB0aGlzLnNvY2tldC5vbih0aGlzLm9wZW5mYWFzVXJsICsgIl9jb250cm9sIiwgZnVuY3Rpb24gKG1zZykgewogICAgICAgIGlmIChJc0pzb25TdHJpbmcobXNnKSkgewogICAgICAgICAgbXNnID0gSlNPTi5wYXJzZShtc2cpOwoKICAgICAgICAgIGlmIChtc2cuc3VjY2VzcykgewogICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMobXNnLnRlc3RzKS5sZW5ndGggPj0gT2JqZWN0LmtleXMoX3RoaXMudGVzdHMpLmxlbmd0aCkgewogICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBtc2cudGVzdHMpIHsKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cobXNnLnRlc3RzW2tleV0pOwogICAgICAgICAgICAgICAgdmFyIGlkID0gbXNnLnRlc3RzW2tleV0uaWQ7CgogICAgICAgICAgICAgICAgaWYgKGlkIGluIF90aGlzLnRlc3RzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnRlc3RzW2lkXS5kYXRhID0gbXNnLnRlc3RzW2tleV0uZGF0YTsKICAgICAgICAgICAgICAgICAgX3RoaXMudGVzdHNbaWRdLnZhbGlkID0gbXNnLnRlc3RzW2tleV0udmFsaWQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpcy50ZXN0c1tpZF0gPSBtc2cudGVzdHNba2V5XTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIF90aGlzLnRlc3RzKSB7CiAgICAgICAgICAgICAgICBpZiAoa2V5IGluIG1zZy50ZXN0cykgewogICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKG1zZy50ZXN0c1trZXldKTsKICAgICAgICAgICAgICAgICAgdmFyIF9pZCA9IG1zZy50ZXN0c1trZXldLmlkOwoKICAgICAgICAgICAgICAgICAgaWYgKF9pZCBpbiBfdGhpcy50ZXN0cykgewogICAgICAgICAgICAgICAgICAgIF90aGlzLnRlc3RzW19pZF0uZGF0YSA9IG1zZy50ZXN0c1trZXldLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMudGVzdHNbX2lkXS52YWxpZCA9IG1zZy50ZXN0c1trZXldLnZhbGlkOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIF90aGlzLnRlc3RzW19pZF0gPSBtc2cudGVzdHNba2V5XTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMudGVzdHNba2V5XS5zdGF0dXMgPSAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7IC8vIGNvbnNvbGUubG9nKCJjb250cm9sIHJlZ2lzdGVyZWQiKQogICAgfSwKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy9nZXQgcnVubmluZyB0ZXN0cwogICAgICBmZXRjaCh0aGlzLnVybCwgewogICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIGNvbW1hbmQ6IDEzCiAgICAgICAgfSkKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBkYXRhLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIF90aGlzMi50ZXN0cyA9IGRhdGEudGVzdHM7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLiRlbWl0KCJpbmZvIiwgIkNvdWxkIG5vdCBjb25uZWN0IHRvIHNlcnZlciIsICJyZWQiKTsKICAgICAgfSk7IC8vZ2V0IGluc3RhbGxpbmcgcHJvamVjdHMKCiAgICAgIGZldGNoKHRoaXMudXJsLCB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgY29tbWFuZDogMQogICAgICAgIH0pCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpczIucHJvamVjdHMgPSBkYXRhLnByb2plY3RzOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kZW1pdCgiaW5mbyIsICJDb3VsZCBub3QgY29ubmVjdCB0byBzZXJ2ZXIiLCAicmVkIik7CiAgICAgIH0pOwogICAgICB0aGlzLnJlZ2lzdGVyKCk7CiAgICAgIHRoaXMuc29ja2V0Lm9uKHRoaXMub3BlbmZhYXNVcmwgKyAiX2NvbnRyb2xfdGVzdF9kZWxldGUiLCBmdW5jdGlvbiAobXNnKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmIChtc2dbaV0gaW4gX3RoaXMyLnRlc3RzKSB7CiAgICAgICAgICAgIGRlbGV0ZSBfdGhpczIudGVzdHNbbXNnW2ldXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLnNvY2tldC5vbih0aGlzLm9wZW5mYWFzVXJsICsgIl9jb250cm9sX3Rlc3Rfc3RvcCIsIGZ1bmN0aW9uIChtc2cpIHsKICAgICAgICBpZiAobXNnIGluIF90aGlzMi50ZXN0cykgewogICAgICAgICAgX3RoaXMyLnRlc3RzW21zZ10uc3RhdHVzID0gMDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGtpbGxSdW5uaW5nVGFza3M6IGZ1bmN0aW9uIGtpbGxSdW5uaW5nVGFza3MoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kcm9vdC5zZXRVcENvbmZpcm1hdGlvbigiS2lsbCBhbGwgcnVubmluZyB0YXNrcz8gSXN0YWxsYXRpb24gdGFza3Mgd2lsbCBhbHNvIGJlIGtpbGxlZCIsICJLaWxsIiwgZnVuY3Rpb24gKCkgewogICAgICAgIGZldGNoKF90aGlzMy51cmwsIHsKICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICBjb21tYW5kOiA5MTEKICAgICAgICAgIH0pCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgX3RoaXMzLiRlbWl0KCJpbmZvIiwgIlN1Y2Nlc3MiLCAiZ3JlZW4iKTsKCiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBfdGhpczMudGVzdHMpIHsKICAgICAgICAgICAgICBfdGhpczMudGVzdHNba2V5XS5zdGF0dXMgPSAwOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczMuJGVtaXQoImluZm8iLCAiVGhlcmUgd2FzIGFuIGVycm9yIGtpbGxpbmcgcnVubmluZyB0YXNrcyIsICJyZWQiKTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuJGVtaXQoImluZm8iLCAiQ291bGQgbm90IGNvbm5lY3QgdG8gc2VydmVyIiwgInJlZCIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVBbGxQcm9qZWN0czogZnVuY3Rpb24gZGVsZXRlQWxsUHJvamVjdHMoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kcm9vdC5zZXRVcENvbmZpcm1hdGlvbigiRGVsZXRlIGFsbCBwcm9qZWN0cz8iLCAiRGVsZXRlIiwgZnVuY3Rpb24gKCkgewogICAgICAgIGZldGNoKF90aGlzNC51cmwsIHsKICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICBjb21tYW5kOiA5MTIKICAgICAgICAgIH0pCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgX3RoaXM0LiRlbWl0KCJpbmZvIiwgIlN1Y2Nlc3MiLCAiZ3JlZW4iKTsKCiAgICAgICAgICAgIF90aGlzNC5zb2NrZXQuZW1pdCgiY2xlYW5fdXAiLCB7CiAgICAgICAgICAgICAgb3BlbmZhYXN1cmw6IF90aGlzNC5vcGVuZmFhc1VybAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF90aGlzNC50ZXN0cyA9IHt9OwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM0LiRlbWl0KCJpbmZvIiwgIlRoZXJlIHdhcyBhbiBlcnJvciBkZWxldGluZyBwcm9qZWN0cyIsICJyZWQiKTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczQuJGVtaXQoImluZm8iLCAiQ291bGQgbm90IGNvbm5lY3QgdG8gc2VydmVyIiwgInJlZCIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICByZXN0YXJ0OiBmdW5jdGlvbiByZXN0YXJ0KGluZm8sIHBpZCwgc2lkKSB7CiAgICAgIHRoaXMuc3RhcnQoaW5mby51c2VycywgaW5mby5zcGF3bl9yYXRlLCBpbmZvLndvcmtlcnMsIGluZm8uaG9zdCwgaW5mby50aW1lLCBwaWQsIHNpZCk7CiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIHN0YXJ0KHVzZXJzLCBzcGF3blJhdGUsIHdvcmtlcnMsIGhvc3QsIHRpbWUsIHBpZCwgc2lkKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgZmV0Y2godGhpcy51cmwsIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICBjb21tYW5kOiA1LAogICAgICAgICAgcHJvamVjdF9uYW1lOiBwaWQsCiAgICAgICAgICBzY3JpcHRfbmFtZTogc2lkLAogICAgICAgICAgdXNlcnM6IHBhcnNlSW50KHVzZXJzKSwKICAgICAgICAgIHNwYXduX3JhdGU6IHBhcnNlSW50KHNwYXduUmF0ZSksCiAgICAgICAgICB3b3JrZXJzOiBwYXJzZUludCh3b3JrZXJzKSwKICAgICAgICAgIGhvc3Q6IGhvc3QsCiAgICAgICAgICB0aW1lOiBwYXJzZUludCh0aW1lKQogICAgICAgIH0pCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICB2YXIgaWQgPSBkYXRhLmlkOwogICAgICAgICAgdmFyIHN0YXJ0ZWRBdCA9IGRhdGEuc3RhcnRlZF9hdDsKICAgICAgICAgIHZhciBpbmZvID0gSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICB1c2VyczogdXNlcnMsCiAgICAgICAgICAgIHNwYXduX3JhdGU6IHNwYXduUmF0ZSwKICAgICAgICAgICAgaG9zdDogaG9zdCwKICAgICAgICAgICAgd29ya2Vyczogd29ya2VycywKICAgICAgICAgICAgdGltZTogdGltZSwKICAgICAgICAgICAgc3RhcnRlZF9hdDogc3RhcnRlZEF0CiAgICAgICAgICB9KTsKICAgICAgICAgIHZhciBzdGF0dXMgPSAxOwogICAgICAgICAgdmFyIHZhbGlkID0gdHJ1ZTsKICAgICAgICAgIHZhciB0ZXN0ID0gewogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIGluZm86IGluZm8sCiAgICAgICAgICAgIHN0YXR1czogc3RhdHVzLAogICAgICAgICAgICB2YWxpZDogdmFsaWQsCiAgICAgICAgICAgIHByb2plY3RfbmFtZTogcGlkLAogICAgICAgICAgICBzY3JpcHRfbmFtZTogc2lkLAogICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShbXSkKICAgICAgICAgIH07CiAgICAgICAgICBfdGhpczUudGVzdHNbaWRdID0gdGVzdDsKCiAgICAgICAgICBfdGhpczUuc29ja2V0LmVtaXQoInRlc3Rfc3RhcnQiLCB7CiAgICAgICAgICAgIG9wZW5mYWFzdXJsOiBfdGhpczUub3BlbmZhYXNVcmwsCiAgICAgICAgICAgIHByb2plY3RfbmFtZTogcGlkLAogICAgICAgICAgICBzY3JpcHRfbmFtZTogc2lkLAogICAgICAgICAgICB0ZXN0OiB0ZXN0CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuJGVtaXQoImluZm8iLCAiQ291bGQgbm90IGNvbm5lY3QgdG8gc2VydmVyIiwgInJlZCIpOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVUZXN0OiBmdW5jdGlvbiBkZWxldGVUZXN0KGlkLCBwaWQsIHNpZCkgewogICAgICBkZWxldGUgdGhpcy50ZXN0c1tpZF07CiAgICAgIHRoaXMuc29ja2V0LmVtaXQoInRlc3RfZGVsZXRlIiwgewogICAgICAgIG9wZW5mYWFzdXJsOiB0aGlzLm9wZW5mYWFzVXJsLAogICAgICAgIHByb2plY3RfbmFtZTogcGlkLAogICAgICAgIHNjcmlwdF9uYW1lOiBzaWQsCiAgICAgICAgaWRzOiBbaWRdCiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVByb2plY3Q6IGZ1bmN0aW9uIGRlbGV0ZVByb2plY3QocHJvamVjdCkgewogICAgICB0aGlzLnByb2plY3RzID0gdGhpcy5wcm9qZWN0cy5maWx0ZXIoZnVuY3Rpb24gKHApIHsKICAgICAgICByZXR1cm4gcCAhPT0gcHJvamVjdDsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcmV2ZXJzZWRUZXN0czogZnVuY3Rpb24gcmV2ZXJzZWRUZXN0cygpIHsKICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHRoaXMudGVzdHMpLnJldmVyc2UoKTsKICAgIH0KICB9LAogIGJlZm9yZVVubW91bnQ6IGZ1bmN0aW9uIGJlZm9yZVVubW91bnQoKSB7CiAgICB0aGlzLnNvY2tldC5lbWl0KCJkaXNjb25uZWN0X2NvbnRyb2wiKTsKICAgIHRoaXMuc29ja2V0Lm9mZih0aGlzLm9wZW5mYWFzVXJsICsgIl9jb250cm9sIik7CiAgICB0aGlzLnNvY2tldC5vZmYodGhpcy5vcGVuZmFhc1VybCArICJfY29udHJvbF90ZXN0X2RlbGV0ZSIpOwogICAgdGhpcy5zb2NrZXQub2ZmKHRoaXMub3BlbmZhYXNVcmwgKyAiX2NvbnRyb2xfdGVzdF9zdG9wIik7IC8vIGNvbnNvbGUubG9nKCJjb250cm9sIGRpc2Nvbm5lY3RlZCIpCiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfSwKICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkgewogICAgaWYgKHRoaXMudXBkYXRlKSB7CiAgICAgIHRoaXMuaW5pdCgpOwogICAgICB0aGlzLiRyb290LnVwZGF0ZWQoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/Control.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"control-btn-container\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-block control-btn\"\n        id=\"kill-btn\"\n        @click=\"killRunningTasks\"\n      >\n        Kill running tasks\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-block control-btn\"\n        id=\"cleanup-btn\"\n        @click=\"deleteAllProjects\"\n      >\n        Delete all projects\n      </button>\n    </div>\n    <InstallationProcess\n      v-for=\"project in projects\"\n      :key=\"project\"\n      :id=\"project\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :socket=\"socket\"\n      @delete=\"deleteProject(project)\"\n    >\n    </InstallationProcess>\n\n    <Test\n      v-for=\"test in reversedTests\"\n      :key=\"test[0]\"\n      :id=\"test[0]\"\n      :info=\"JSON.parse(test[1].info)\"\n      :data=\"JSON.parse(test[1].data)\"\n      :status=\"test[1].status\"\n      :valid=\"test[1].valid\"\n      :showPath=\"true\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :pid=\"test[1].project_name\"\n      :sid=\"test[1].script_name\"\n      :startMinimized=\"minimizeTests\"\n      @restart=\"restart\"\n      @delete=\"deleteTest\"\n    ></Test>\n  </div>\n</template>\n\n<script>\nimport Test from \"@/components/Test.vue\";\nimport InstallationProcess from \"@/components/InstallationProcess.vue\";\n\nexport default {\n  name: \"Control\",\n  components: {\n    Test,\n    InstallationProcess,\n  },\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"minimizeTests\", \"update\"],\n  data() {\n    return {\n      tests: {},\n      projects: [],\n    };\n  },\n  methods: {\n    register() {\n      this.socket.off(this.openfaasUrl + \"_control\");\n      this.socket.emit(\"register_control\", { openfaasurl: this.openfaasUrl });\n      this.socket.on(this.openfaasUrl + \"_control\", (msg) => {\n        if (IsJsonString(msg)) {\n          msg = JSON.parse(msg);\n          if (msg.success) {\n            if (\n              Object.keys(msg.tests).length >= Object.keys(this.tests).length\n            ) {\n              for (var key in msg.tests) {\n                //console.log(msg.tests[key]);\n                const id = msg.tests[key].id;\n                if (id in this.tests) {\n                  this.tests[id].data = msg.tests[key].data;\n                  this.tests[id].valid = msg.tests[key].valid;\n                } else {\n                  this.tests[id] = msg.tests[key];\n                }\n              }\n            } else {\n              for (var key in this.tests) {\n                if (key in msg.tests) {\n                  //console.log(msg.tests[key]);\n                  const id = msg.tests[key].id;\n                  if (id in this.tests) {\n                    this.tests[id].data = msg.tests[key].data;\n                    this.tests[id].valid = msg.tests[key].valid;\n                  } else {\n                    this.tests[id] = msg.tests[key];\n                  }\n                } else {\n                  this.tests[key].status = 0;\n                }\n              }\n            }\n          }\n        }\n      });\n      // console.log(\"control registered\")\n    },\n    init() {\n      //get running tests\n      fetch(this.url, { method: \"POST\", body: JSON.stringify({ command: 13 }) })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.tests = data.tests;\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      //get installing projects\n      fetch(this.url, { method: \"POST\", body: JSON.stringify({ command: 1 }) })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.projects = data.projects;\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.register();\n      this.socket.on(this.openfaasUrl + \"_control_test_delete\", (msg) => {\n        for (var i = 0; i < msg.length; i++) {\n          if (msg[i] in this.tests) {\n            delete this.tests[msg[i]];\n          }\n        }\n      });\n      this.socket.on(this.openfaasUrl + \"_control_test_stop\", (msg) => {\n        if (msg in this.tests) {\n          this.tests[msg].status = 0;\n        }\n      });\n    },\n    killRunningTasks() {\n      this.$root.setUpConfirmation(\n        \"Kill all running tasks? Istallation tasks will also be killed\",\n        \"Kill\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({ command: 911 }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                for (var key in this.tests) {\n                  this.tests[key].status = 0;\n                }\n              } else {\n                this.$emit(\n                  \"info\",\n                  \"There was an error killing running tasks\",\n                  \"red\"\n                );\n              }\n            })\n            .catch(() => {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    deleteAllProjects() {\n      this.$root.setUpConfirmation(\"Delete all projects?\", \"Delete\", () => {\n        fetch(this.url, {\n          method: \"POST\",\n          body: JSON.stringify({ command: 912 }),\n        })\n          .then((data) => data.json())\n          .then((data) => {\n            if (data.success) {\n              this.$emit(\"info\", \"Success\", \"green\");\n              this.socket.emit(\"clean_up\", {\n                openfaasurl: this.openfaasUrl,\n              });\n              this.tests = {};\n            } else {\n              this.$emit(\"info\", \"There was an error deleting projects\", \"red\");\n            }\n          })\n          .catch(() => {\n            this.$emit(\"info\", \"Could not connect to server\", \"red\");\n          });\n      });\n    },\n    restart(info, pid, sid) {\n      this.start(\n        info.users,\n        info.spawn_rate,\n        info.workers,\n        info.host,\n        info.time,\n        pid,\n        sid\n      );\n    },\n    start(users, spawnRate, workers, host, time, pid, sid) {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 5,\n          project_name: pid,\n          script_name: sid,\n          users: parseInt(users),\n          spawn_rate: parseInt(spawnRate),\n          workers: parseInt(workers),\n          host: host,\n          time: parseInt(time),\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            const id = data.id;\n            const startedAt = data.started_at;\n            const info = JSON.stringify({\n              users: users,\n              spawn_rate: spawnRate,\n              host: host,\n              workers: workers,\n              time: time,\n              started_at: startedAt,\n            });\n            const status = 1;\n            const valid = true;\n            const test = {\n              id: id,\n              info: info,\n              status: status,\n              valid: valid,\n              project_name: pid,\n              script_name: sid,\n              data: JSON.stringify([]),\n            };\n            this.tests[id] = test;\n            this.socket.emit(\"test_start\", {\n              openfaasurl: this.openfaasUrl,\n              project_name: pid,\n              script_name: sid,\n              test: test,\n            });\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n    },\n    deleteTest(id, pid, sid) {\n      delete this.tests[id];\n      this.socket.emit(\"test_delete\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: pid,\n        script_name: sid,\n        ids: [id],\n      });\n    },\n    deleteProject(project) {\n      this.projects = this.projects.filter((p) => p !== project);\n    },\n  },\n  computed: {\n    reversedTests() {\n      return Object.entries(this.tests).reverse();\n    },\n  },\n  beforeUnmount() {\n    this.socket.emit(\"disconnect_control\");\n    this.socket.off(this.openfaasUrl + \"_control\");\n    this.socket.off(this.openfaasUrl + \"_control_test_delete\");\n    this.socket.off(this.openfaasUrl + \"_control_test_stop\");\n    // console.log(\"control disconnected\")\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}