{"remainingRequest":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Script.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Script.vue","mtime":1641563910572},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/babel.config.js","mtime":1641563910552},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Script.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h3>{{ id }}</h3>\n    <!-- Button trigger modal -->\n    <div class=\"btn-container\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary\"\n        data-mdb-toggle=\"modal\"\n        data-mdb-target=\"#Modal\"\n      >\n        Start\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        id=\"stop-script-tests\"\n        @click=\"stopAll\"\n      >\n        Stop all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        id=\"delete-script-tests\"\n        @click=\"deleteAll\"\n      >\n        Delete all\n      </button>\n    </div>\n    <Test\n      v-for=\"test in reversedTests\"\n      :key=\"test[0]\"\n      :id=\"test[0]\"\n      :info=\"JSON.parse(test[1].info)\"\n      :data=\"JSON.parse(test[1].data)\"\n      :status=\"test[1].status\"\n      :valid=\"test[1].valid\"\n      :showPath=\"false\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :pid=\"pid\"\n      :sid=\"id\"\n      :startMinimized=\"minimizeTests\"\n      @restart=\"restart\"\n      @delete=\"deleteTest\"\n      @stop=\"stop(test[0])\"\n    ></Test>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"Modal\"\n      tabindex=\"-1\"\n      aria-labelledby=\"ModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"ModalLabel\">Start</h5>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <!-- Users input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"users-input\"\n                  class=\"form-control\"\n                  v-model=\"users\"\n                />\n                <label class=\"form-label\" for=\"users-input\">Users</label>\n              </div>\n              <!-- Spawn rate input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"spawn-rate-input\"\n                  class=\"form-control\"\n                  v-model=\"spawnRate\"\n                />\n                <label class=\"form-label\" for=\"spawn-rate-input\"\n                  >Spawn rate</label\n                >\n              </div>\n              <!-- Workers input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"workers-input\"\n                  class=\"form-control\"\n                  v-model=\"workers\"\n                />\n                <label class=\"form-label\" for=\"workers-input\">Workers</label>\n              </div>\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\n                This will overwrite all hosts in your file\n              </div>\n              <!-- Host input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"host-input\"\n                  class=\"form-control\"\n                  v-model=\"host\"\n                />\n                <label class=\"form-label\" for=\"host-input\">Host</label>\n              </div>\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\n                If time is not set, the test will not stop automatically\n              </div>\n              <!-- Time input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"time-input\"\n                  class=\"form-control\"\n                  v-model=\"time\"\n                />\n                <label class=\"form-label\" for=\"time-input\"\n                  >Time in seconds</label\n                >\n              </div>\n              <!-- Submit button -->\n              <button\n                type=\"button\"\n                class=\"btn btn-primary btn-block\"\n                id=\"start-btn\"\n                @click=\"startFromModal\"\n              >\n                Start\n              </button>\n            </form>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary hidden\"\n              data-mdb-dismiss=\"modal\"\n              id=\"dismiss-btn\"\n              ref=\"dismiss\"\n            ></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Test from \"@/components/Test.vue\";\n\nexport default {\n  name: \"Script\",\n  components: {\n    Test,\n  },\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"minimizeTests\", \"update\"],\n  data() {\n    return {\n      id: this.$route.params.id,\n      pid: this.$route.params.pid,\n      tests: {},\n      users: \"\",\n      spawnRate: \"\",\n      workers: \"\",\n      host: \"\",\n      time: \"\",\n    };\n  },\n  methods: {\n    register(test_ids) {\n      this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\n      this.socket.emit(\"register_script\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_ids: test_ids,\n      });\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id,\n        (msg) => {\n          if (IsJsonString(msg)) {\n            msg = JSON.parse(msg);\n            //console.log(msg);\n            if (msg.success) {\n              for (var i = 0; i < msg.tests.length; i++) {\n                const id = msg.tests[i].id;\n                if (id in this.tests) {\n                  const status = msg.tests[i].status;\n                  if (status === 0) {\n                    // not running\n                    this.disconnectTest(id);\n                    this.tests[id].status = 0;\n                  } else if (status === 1) {\n                    this.tests[id].data = msg.tests[i].data;\n                  } else if (status === 3) {\n                    // console.log(\"not valid\");\n                    this.tests[id].valid = false;\n                    this.$emit(\n                      \"info\",\n                      id + \": There was an error running this test\",\n                      \"red\"\n                    );\n                    this.disconnectTest(id);\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n      // console.log(\"script registered\");\n    },\n    registerTest(test_id) {\n      this.socket.emit(\"register_test\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_id: test_id,\n      });\n    },\n    disconnectTest(test_id) {\n      // console.log(\"disconnecting\");\n      this.socket.emit(\"disconnect_test\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_id: test_id,\n      });\n    },\n    init() {\n      //get host\n      this.host = localStorage.getItem(\"last_host\");\n      //mdb init\n      document.querySelectorAll(\".form-outline\").forEach((formOutline) => {\n        new mdb.Input(formOutline).init();\n      });\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 7,\n          project_name: this.pid,\n          script_name: this.id,\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            //console.log(data)\n            var test_ids = [];\n            for (var test_id in data.tests) {\n              if (data.tests[test_id].status === 1) {\n                test_ids.push(data.tests[test_id].id);\n              }\n            }\n            this.register(test_ids);\n            // console.log(\"registering: \", test_ids);\n            this.tests = data.tests;\n          }\n        })\n        .catch((e) => {\n          // console.log(e);\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\",\n        (msg) => {\n          // console.log(msg.id in this.tests);\n          if (msg.id in this.tests) return;\n          this.tests[msg.id] = msg;\n          this.registerTest(msg.id);\n        }\n      );\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\",\n        (msg) => {\n          // console.log(msg);\n          for (var i = 0; i < msg.length; i++) {\n            if (msg[i] in this.tests) {\n              delete this.tests[msg[i]];\n              this.disconnectTest(msg[i]);\n            }\n          }\n        }\n      );\n      this.socket.on(\n        this.openfaasUrl + \"_project_delete_\" + this.pid,\n        (msg) => {\n          this.$emit(\"info\", this.pid + \" is deleted\", \"green\");\n          this.$router.push({ name: \"Home\" });\n        }\n      );\n    },\n    stopAll() {\n      this.$root.setUpConfirmation(\n        this.id + \": Are you sure you want to stop all tests?\",\n        \"Stop\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({\n              command: 17,\n              project_name: this.pid,\n              script_name: this.id,\n            }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                this.socket.emit(\"disconnect_script\", {\n                  project_name: this.pid,\n                  script_name: this.id,\n                });\n                for (var key in this.tests) {\n                  this.tests[key].status = 0;\n                }\n              } else {\n                this.$emit(\"info\", \"There was an error stopping tests\", \"red\");\n              }\n            })\n            .catch(function () {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    deleteAll() {\n      this.$root.setUpConfirmation(\n        this.id + \": Are you sure you want to delete all tests?\",\n        \"Delete\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({\n              command: 16,\n              project_name: this.pid,\n              script_name: this.id,\n            }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                this.socket.emit(\"disconnect_script\", {\n                  project_name: this.pid,\n                  script_name: this.id,\n                });\n                this.socket.emit(\"test_delete\", {\n                  openfaasurl: this.openfaasUrl,\n                  project_name: this.pid,\n                  script_name: this.id,\n                  ids: Object.keys(this.tests),\n                });\n                this.tests = {};\n              } else {\n                this.$emit(\"info\", \"There was an error deleting tests\", \"red\");\n              }\n            })\n            .catch(function () {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    start(users, spawnRate, workers, host, time) {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 5,\n          project_name: this.pid,\n          script_name: this.id,\n          users: parseInt(users),\n          spawn_rate: parseInt(spawnRate),\n          workers: parseInt(workers),\n          host: host,\n          time: parseInt(time),\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            const id = data.id;\n            const startedAt = data.started_at;\n            const info = JSON.stringify({\n              users: users,\n              spawn_rate: spawnRate,\n              host: host,\n              workers: workers,\n              time: time,\n              started_at: startedAt,\n            });\n            const status = 1;\n            const valid = true;\n            const test = {\n              id: id,\n              info: info,\n              status: status,\n              valid: valid,\n              data: JSON.stringify([]),\n            };\n            // console.log(test);\n            this.tests[id] = test;\n            // console.log(\"started: \", test);\n            this.registerTest(id);\n            this.socket.emit(\"test_start\", {\n              openfaasurl: this.openfaasUrl,\n              project_name: this.pid,\n              script_name: this.id,\n              test: test,\n            });\n          } else {\n            this.$emit(\"info\", data.message, \"red\");\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n    },\n    startFromModal() {\n      if (this.host != null) {\n        this.host = this.host.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (this.host != \"\") {\n          this.host = \"http://\" + this.host;\n        }\n      }\n      // handle false inputs\n      if (this.users === \"\") {\n        this.$emit(\"info\", \"Users cant be empty\", \"red\");\n        return false;\n      }\n      if (!isInteger(this.users)) {\n        this.$emit(\"info\", \"Users must be an integer\", \"red\");\n        return false;\n      }\n      if (this.spawnRate === \"\") {\n        this.$emit(\"info\", \"Spawn rate cant be empty\", \"red\");\n        return false;\n      }\n      if (!isInteger(this.spawnRate)) {\n        this.$emit(\"info\", \"Spawn rate must be an integer\", \"red\");\n        return false;\n      }\n      if (this.workers !== \"\" && !isInteger(this.workers)) {\n        this.$emit(\"info\", \"workers must be an integer\", \"red\");\n        return false;\n      }\n\n      if (this.time != \"\") {\n        if (!isInteger(this.time)) {\n          this.$emit(\"info\", \"Time must be an integer\", \"red\");\n          return false;\n        }\n      }\n      this.$refs.dismiss.click();\n      if (this.host != \"\" && this.host != null) {\n        localStorage.setItem(\"last_host\", this.host);\n      }\n      this.start(\n        this.users,\n        this.spawnRate,\n        this.workers,\n        this.host,\n        this.time\n      );\n    },\n    restart(info) {\n      this.start(\n        info.users,\n        info.spawn_rate,\n        info.workers,\n        info.host,\n        info.time\n      );\n    },\n    deleteTest(id) {\n      delete this.tests[id];\n      this.socket.emit(\"test_delete\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        ids: [id],\n      });\n      this.disconnectTest(id);\n    },\n    stop(id) {\n      this.socket.emit(\"test_stop\", {\n        openfaasurl: this.openfaasUrl,\n        id: id,\n      });\n    },\n  },\n  computed: {\n    reversedTests() {\n      return Object.entries(this.tests).reverse();\n    },\n  },\n  beforeUnmount() {\n    this.socket.emit(\"disconnect_script\", {\n      project_name: this.pid,\n      script_name: this.id,\n    });\n    this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\n    this.socket.off(\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\"\n    );\n    this.socket.off(\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\"\n    );\n    this.socket.off(this.openfaasUrl + \"_project_delete_\" + this.pid);\n    // console.log(\"script disconnected\");\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}