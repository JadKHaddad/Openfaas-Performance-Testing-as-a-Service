{"remainingRequest":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Project.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Project.vue","mtime":1641563910572},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/babel.config.js","mtime":1641563910552},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQcm9qZWN0IiwKICBwcm9wczogWyJ1cmwiLCAib3BlbmZhYXNVcmwiLCAic29ja2V0IiwgInVwZGF0ZSJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICBzY3JpcHRzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBmZXRjaCh0aGlzLnVybCwgewogICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIGNvbW1hbmQ6IDQsCiAgICAgICAgICBwcm9qZWN0X25hbWU6IHRoaXMuaWQKICAgICAgICB9KQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgICAgICAgX3RoaXMuc2NyaXB0cyA9IGRhdGEubG9jdXN0X3NjcmlwdHM7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJGVtaXQoImluZm8iLCAiQ291bGQgbm90IGNvbm5lY3QgdG8gc2VydmVyIiwgInJlZCIpOwogICAgICB9KTsKICAgICAgdGhpcy5zb2NrZXQub24odGhpcy5vcGVuZmFhc1VybCArICJfcHJvamVjdF9kZWxldGVfIiArIHRoaXMuaWQsIGZ1bmN0aW9uIChtc2cpIHsKICAgICAgICBfdGhpcy4kZW1pdCgiaW5mbyIsIF90aGlzLmlkICsgIiBpcyBkZWxldGVkIiwgImdyZWVuIik7CgogICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAiSG9tZSIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgbmF2aWdhdGVUb1NjcmlwdDogZnVuY3Rpb24gbmF2aWdhdGVUb1NjcmlwdChzY3JpcHQpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICJTY3JpcHQiLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgcGlkOiB0aGlzLmlkLAogICAgICAgICAgaWQ6IHNjcmlwdAogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBiZWZvcmVVbm1vdW50OiBmdW5jdGlvbiBiZWZvcmVVbm1vdW50KCkgewogICAgdGhpcy5zb2NrZXQub2ZmKHRoaXMub3BlbmZhYXNVcmwgKyAiX3Byb2plY3RfZGVsZXRlXyIgKyB0aGlzLmlkKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICBpZiAodGhpcy51cGRhdGUpIHsKICAgICAgdGhpcy5pbml0KCk7CiAgICAgIHRoaXMuJHJvb3QudXBkYXRlZCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/src/views/project/Project.vue"],"names":[],"mappings":";;AAoBA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;AAEb,EAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC,QAAjC,CAFM;AAGb,EAAA,IAHa,kBAGN;AACL,WAAO;AACL,MAAA,EAAE,EAAE,KAAK,MAAL,CAAY,MAAZ,CAAmB,EADlB;AAEL,MAAA,OAAO,EAAE;AAFJ,KAAP;AAID,GARY;AASb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AAAA;;AACL,MAAA,KAAK,CAAC,KAAK,GAAN,EAAW;AACd,QAAA,MAAM,EAAE,MADM;AAEd,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AAAE,UAAA,OAAO,EAAE,CAAX;AAAc,UAAA,YAAY,EAAE,KAAK;AAAjC,SAAf;AAFQ,OAAX,CAAL,CAIG,IAJH,CAIQ,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,IAAL,EAAV;AAAA,OAJR,EAKG,IALH,CAKQ,UAAC,IAAD,EAAU;AACd,YAAI,IAAI,CAAC,OAAT,EAAkB;AAChB,UAAA,KAAI,CAAC,OAAL,GAAe,IAAI,CAAC,cAApB;AACF;AACD,OATH,EAUG,KAVH,CAUS,YAAM;AACX,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,6BAAnB,EAAkD,KAAlD;AACD,OAZH;AAaA,WAAK,MAAL,CAAY,EAAZ,CAAe,KAAK,WAAL,GAAmB,kBAAnB,GAAwC,KAAK,EAA5D,EAAgE,UAAC,GAAD,EAAS;AACvE,QAAA,KAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,KAAI,CAAC,EAAL,GAAU,aAA7B,EAA4C,OAA5C;;AACA,QAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB;AAAE,UAAA,IAAI,EAAE;AAAR,SAAlB;AACD,OAHD;AAID,KAnBM;AAoBP,IAAA,gBApBO,4BAoBU,MApBV,EAoBkB;AACvB,WAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,QAAA,IAAI,EAAE,QADU;AAEhB,QAAA,MAAM,EAAE;AAAE,UAAA,GAAG,EAAE,KAAK,EAAZ;AAAgB,UAAA,EAAE,EAAE;AAApB;AAFQ,OAAlB;AAID;AAzBM,GATI;AAoCb,EAAA,aApCa,2BAoCG;AACd,SAAK,MAAL,CAAY,GAAZ,CAAgB,KAAK,WAAL,GAAmB,kBAAnB,GAAwC,KAAK,EAA7D;AACD,GAtCY;AAuCb,EAAA,OAvCa,qBAuCH;AACR,SAAK,IAAL;AACD,GAzCY;AA0Cb,EAAA,OA1Ca,qBA0CH;AACR,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,IAAL;AACA,WAAK,KAAL,CAAW,OAAX;AACF;AACD;AA/CY,CAAf","sourcesContent":["<template>\n  <div>\n    <h3>{{ id }}</h3>\n    <div class=\"list-group\">\n      <a\n        v-for=\"script in scripts\"\n        :key=\"script\"\n        :id=\"script\"\n        @click=\"navigateToScript(script)\"\n        class=\"list-group-item list-group-item-action\"\n      >\n        <router-link :to=\"{ name: 'Script', params: { pid: id, id: script } }\">\n          <label class=\"test-label\"> {{ script }} </label>\n        </router-link>\n      </a>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Project\",\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"update\"],\n  data() {\n    return {\n      id: this.$route.params.id,\n      scripts: [],\n    };\n  },\n  methods: {\n    init() {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({ command: 4, project_name: this.id }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.scripts = data.locust_scripts;\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.socket.on(this.openfaasUrl + \"_project_delete_\" + this.id, (msg) => {\n        this.$emit(\"info\", this.id + \" is deleted\", \"green\");\n        this.$router.push({ name: \"Home\" });\n      });\n    },\n    navigateToScript(script) {\n      this.$router.push({\n        name: \"Script\",\n        params: { pid: this.id, id: script },\n      });\n    },\n  },\n  beforeUnmount() {\n    this.socket.off(this.openfaasUrl + \"_project_delete_\" + this.id);\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}