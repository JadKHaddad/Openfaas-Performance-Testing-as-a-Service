{"version":3,"sources":["webpack:///./src/views/project/Script.vue","webpack:///./src/views/project/Script.vue?3700"],"names":["class","type","data-mdb-toggle","data-mdb-target","id","tabindex","aria-labelledby","aria-hidden","for","style","data-mdb-dismiss","ref","stopAll","deleteAll","reversedTests","test","key","info","JSON","parse","data","status","valid","showPath","url","openfaasUrl","pid","sid","startMinimized","minimizeTests","mobileAgent","restart","deleteTest","stop","users","spawnRate","workers","host","time","description","startFromModal","name","components","Test","props","this","$route","params","tests","methods","register","test_ids","socket","off","emit","openfaasurl","project_name","script_name","on","msg","IsJsonString","success","i","length","disconnectTest","$emit","registerTest","test_id","init","localStorage","getItem","document","querySelectorAll","forEach","formOutline","mdb","Input","fetch","method","body","stringify","command","then","json","push","catch","e","$router","$root","setUpConfirmation","ids","Object","keys","start","parseInt","spawn_rate","startedAt","started_at","message","indexOf","isInteger","$refs","dismiss","click","setItem","computed","entries","reverse","beforeUnmount","mounted","updated","update","__exports__","render"],"mappings":"gKAISA,MAAM,iB,EACT,eAOS,UANPC,KAAK,SACLD,MAAM,kBACNE,kBAAgB,QAChBC,kBAAgB,UACjB,WAED,G,GAuCAH,MAAM,aACNI,GAAG,QACHC,SAAS,KACTC,kBAAgB,aAChBC,cAAY,Q,GAEPP,MAAM,gB,GACJA,MAAM,iB,EACT,eAEM,OAFDA,MAAM,gBAAc,CACvB,eAAkD,MAA9CA,MAAM,cAAcI,GAAG,cAAa,W,MAErCJ,MAAM,c,GAGFA,MAAM,qB,EAOT,eAAyD,SAAlDA,MAAM,aAAaQ,IAAI,eAAc,SAAK,G,GAG9CR,MAAM,qB,EAOT,eAEC,SAFMA,MAAM,aAAaQ,IAAI,oBAC3B,cAAU,G,GAIVR,MAAM,qB,EAOT,eAA6D,SAAtDA,MAAM,aAAaQ,IAAI,iBAAgB,WAAO,G,EAEvD,eAEM,OAFDR,MAAM,YAAYS,MAAA,2BAA6B,gDAEpD,G,GAEKT,MAAM,qB,EAOT,eAAuD,SAAhDA,MAAM,aAAaQ,IAAI,cAAa,QAAI,G,EAEjD,eAEM,OAFDR,MAAM,YAAYS,MAAA,2BAA6B,8DAEpD,G,GAEKT,MAAM,qB,EAOT,eAEC,SAFMA,MAAM,aAAaQ,IAAI,cAC3B,mBAAe,G,EAGpB,eAEM,OAFDR,MAAM,YAAYS,MAAA,2BAA6B,wBAEpD,G,GAEKT,MAAM,qB,EAOT,eAEC,SAFMA,MAAM,aAAaQ,IAAI,qBAC3B,eAAW,G,GAchBP,KAAK,SACLD,MAAM,yBACNU,mBAAiB,QACjBN,GAAG,cACHO,IAAI,W,6EAzJhB,eA+JM,YA9JJ,eAAiB,yBAAV,EAAAP,IAAE,GAET,eAyBM,MAzBN,EAyBM,CAxBJ,EAQA,eAOS,UANPH,KAAK,SACLD,MAAM,iBACNI,GAAG,oBACF,QAAK,8BAAE,EAAAQ,SAAA,EAAAA,QAAA,sBACT,cAGD,eAOS,UANPX,KAAK,SACLD,MAAM,iBACNI,GAAG,sBACF,QAAK,8BAAE,EAAAS,WAAA,EAAAA,UAAA,sBACT,mB,mBAIH,eAkBQ,2BAjBS,EAAAC,eAAa,SAArBC,G,wBADT,eAkBQ,GAhBLC,IAAKD,EAAK,GACVX,GAAIW,EAAK,GACTE,KAAMC,KAAKC,MAAMJ,EAAK,GAAGE,MACzBG,KAAMF,KAAKC,MAAMJ,EAAK,GAAGK,MACzBC,OAAQN,EAAK,GAAGM,OAChBC,MAAOP,EAAK,GAAGO,MACfC,UAAU,EACVC,IAAK,EAAAA,IACLC,YAAa,EAAAA,YACbC,IAAK,EAAAA,IACLC,IAAK,EAAAvB,GACLwB,eAAgB,EAAAC,cAChBC,YAAa,EAAAA,YACb,UAAS,EAAAC,QACT,SAAQ,EAAAC,WACR,OAAI,mBAAE,EAAAC,KAAKlB,EAAK,M,sJAGnB,eA6GM,MA7GN,EA6GM,CAtGJ,eAqGM,MArGN,EAqGM,CApGJ,eAmGM,MAnGN,EAmGM,CAlGJ,EAGA,eA8FM,MA9FN,EA8FM,CA7FJ,eAqFO,aAnFL,eAQM,MARN,EAQM,C,eAPJ,eAKE,SAJAd,KAAK,OACLG,GAAG,cACHJ,MAAM,e,qDACG,EAAAkC,MAAK,K,mBAAL,EAAAA,SAEX,IAGF,eAUM,MAVN,EAUM,C,eATJ,eAKE,SAJAjC,KAAK,OACLG,GAAG,mBACHJ,MAAM,e,qDACG,EAAAmC,UAAS,K,mBAAT,EAAAA,aAEX,IAKF,eAQM,MARN,EAQM,C,eAPJ,eAKE,SAJAlC,KAAK,OACLG,GAAG,gBACHJ,MAAM,e,qDACG,EAAAoC,QAAO,K,mBAAP,EAAAA,WAEX,IAEF,EAIA,eAQM,MARN,EAQM,C,eAPJ,eAKE,SAJAnC,KAAK,OACLG,GAAG,aACHJ,MAAM,e,qDACG,EAAAqC,KAAI,K,mBAAJ,EAAAA,QAEX,IAEF,EAIA,eAUM,MAVN,EAUM,C,eATJ,eAKE,SAJApC,KAAK,OACLG,GAAG,aACHJ,MAAM,e,qDACG,EAAAsC,KAAI,K,mBAAJ,EAAAA,QAEX,IAIF,EAIA,eAUM,MAVN,EAUM,C,eATJ,eAKE,SAJArC,KAAK,OACLG,GAAG,oBACHJ,MAAM,e,qDACG,EAAAuC,YAAW,K,mBAAX,EAAAA,eAEX,IAKF,eAOS,UANPtC,KAAK,SACLD,MAAM,4BACNI,GAAG,YACF,QAAK,8BAAE,EAAAoC,gBAAA,EAAAA,eAAA,sBACT,aAIH,eAMU,SANV,EAMU,oB,kEAWP,GACbC,KAAM,SACNC,WAAY,CACVC,OAAA,MAEFC,MAAO,CAAC,MAAO,cAAe,SAAU,gBAAiB,SAAU,eACnExB,KANa,WAOX,MAAO,CACLhB,GAAIyC,KAAKC,OAAOC,OAAO3C,GACvBsB,IAAKmB,KAAKC,OAAOC,OAAOrB,IACxBsB,MAAO,GACPd,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,YAAa,KAGjBU,QAAS,CACPC,SADO,SACEC,GAAU,WACjBN,KAAKO,OAAOC,IAAIR,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,IAC/DyC,KAAKO,OAAOE,KAAK,kBAAmB,CAClCC,YAAaV,KAAKpB,YAClB+B,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,GAClB+C,SAAUA,IAEZN,KAAKO,OAAOM,GACVb,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,IAC/C,SAACuD,GACC,GAAIC,aAAaD,KACfA,EAAMzC,KAAKC,MAAMwC,GAEbA,EAAIE,SACN,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAIX,MAAMe,OAAQD,IAAK,CACzC,IAAM1D,EAAKuD,EAAIX,MAAMc,GAAG1D,GACxB,GAAIA,KAAM,EAAK4C,MAAO,CACpB,IAAM3B,EAASsC,EAAIX,MAAMc,GAAGzC,OACb,IAAXA,GAEF,EAAK2C,eAAe5D,GACpB,EAAK4C,MAAM5C,GAAIiB,OAAS,GACJ,IAAXA,EACT,EAAK2B,MAAM5C,GAAIgB,KAAOuC,EAAIX,MAAMc,GAAG1C,KACf,IAAXC,IAET,EAAK2B,MAAM5C,GAAIkB,OAAQ,EACvB,EAAK2C,MACH,OACA7D,EAAK,yCACL,OAEF,EAAK4D,eAAe5D,UAUpC8D,aA5CO,SA4CMC,GACXtB,KAAKO,OAAOE,KAAK,gBAAiB,CAChCC,YAAaV,KAAKpB,YAClB+B,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,GAClB+D,QAASA,KAGbH,eApDO,SAoDQG,GAEbtB,KAAKO,OAAOE,KAAK,kBAAmB,CAClCC,YAAaV,KAAKpB,YAClB+B,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,GAClB+D,QAASA,KAGbC,KA7DO,WA6DA,WAELvB,KAAKR,KAAOgC,aAAaC,QAAQ,aAEjCC,SAASC,iBAAiB,iBAAiBC,SAAQ,SAACC,GAClD,IAAIC,IAAIC,MAAMF,GAAaN,UAE7BS,MAAMhC,KAAKrB,IAAK,CACdsD,OAAQ,OACRC,KAAM7D,KAAK8D,UAAU,CACnBC,QAAS,EACTzB,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,OAGnB8E,MAAK,SAAC9D,GAAD,OAAUA,EAAK+D,UACpBD,MAAK,SAAC9D,GACL,GAAIA,EAAKyC,QAAS,CAEhB,IAAIV,EAAW,GACf,IAAK,IAAIgB,KAAW/C,EAAK4B,MACY,IAA/B5B,EAAK4B,MAAMmB,GAAS9C,QACtB8B,EAASiC,KAAKhE,EAAK4B,MAAMmB,GAAS/D,IAGtC,EAAK8C,SAASC,GAEd,EAAKH,MAAQ5B,EAAK4B,UAGrBqC,OAAM,SAACC,GAEN,EAAKrB,MAAM,OAAQ,8BAA+B,UAEtDpB,KAAKO,OAAOM,GACVb,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,GAAK,eACpD,SAACuD,GAEKA,EAAIvD,MAAM,EAAK4C,QACnB,EAAKA,MAAMW,EAAIvD,IAAMuD,EACrB,EAAKO,aAAaP,EAAIvD,QAG1ByC,KAAKO,OAAOM,GACVb,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,GAAK,gBACpD,SAACuD,GAEC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC1BH,EAAIG,KAAM,EAAKd,eACV,EAAKA,MAAMW,EAAIG,IACtB,EAAKE,eAAeL,EAAIG,QAKhCjB,KAAKO,OAAOM,GACVb,KAAKpB,YAAc,mBAAqBoB,KAAKnB,KAC7C,SAACiC,GACC,EAAKM,MAAM,OAAQ,EAAKvC,IAAM,cAAe,SAC7C,EAAK6D,QAAQH,KAAK,CAAE3C,KAAM,aAIhC7B,QA5HO,WA4HG,WACRiC,KAAK2C,MAAMC,kBACT5C,KAAKzC,GAAK,6CACV,QACA,WACEyE,MAAM,EAAKrD,IAAK,CACdsD,OAAQ,OACRC,KAAM7D,KAAK8D,UAAU,CACnBC,QAAS,GACTzB,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,OAGnB8E,MAAK,SAAC9D,GAAD,OAAUA,EAAK+D,UACpBD,MAAK,SAAC9D,GACL,GAAIA,EAAKyC,QAMP,IAAK,IAAI7C,KALT,EAAKiD,MAAM,OAAQ,UAAW,SAC9B,EAAKb,OAAOE,KAAK,oBAAqB,CACpCE,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,KAEJ,EAAK4C,MACnB,EAAKA,MAAMhC,GAAKK,OAAS,OAG3B,EAAK4C,MAAM,OAAQ,oCAAqC,UAG3DoB,OAAM,WACLxC,KAAKoB,MAAM,OAAQ,8BAA+B,cAK5DpD,UA9JO,WA8JK,WACVgC,KAAK2C,MAAMC,kBACT5C,KAAKzC,GAAK,+CACV,UACA,WACEyE,MAAM,EAAKrD,IAAK,CACdsD,OAAQ,OACRC,KAAM7D,KAAK8D,UAAU,CACnBC,QAAS,GACTzB,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,OAGnB8E,MAAK,SAAC9D,GAAD,OAAUA,EAAK+D,UACpBD,MAAK,SAAC9D,GACDA,EAAKyC,SACP,EAAKI,MAAM,OAAQ,UAAW,SAC9B,EAAKb,OAAOE,KAAK,oBAAqB,CACpCE,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,KAEpB,EAAKgD,OAAOE,KAAK,cAAe,CAC9BC,YAAa,EAAK9B,YAClB+B,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,GAClBsF,IAAKC,OAAOC,KAAK,EAAK5C,SAExB,EAAKA,MAAQ,IAEb,EAAKiB,MAAM,OAAQ,oCAAqC,UAG3DoB,OAAM,WACLxC,KAAKoB,MAAM,OAAQ,8BAA+B,cAK5D4B,MApMO,SAoMD3D,EAAOC,EAAWC,EAASC,EAAMC,EAAMC,GAAa,WACxDsC,MAAMhC,KAAKrB,IAAK,CACdsD,OAAQ,OACRC,KAAM7D,KAAK8D,UAAU,CACnBC,QAAS,EACTzB,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,GAClB8B,MAAO4D,SAAS5D,GAChB6D,WAAYD,SAAS3D,GACrBC,QAAS0D,SAAS1D,GAClBC,KAAMA,EACNC,KAAMwD,SAASxD,GACfC,YAAaA,MAGd2C,MAAK,SAAC9D,GAAD,OAAUA,EAAK+D,UACpBD,MAAK,SAAC9D,GACL,GAAIA,EAAKyC,QAAS,CAChB,IAAMzD,EAAKgB,EAAKhB,GACV4F,EAAY5E,EAAK6E,WACjBhF,EAAOC,KAAK8D,UAAU,CAC1B9C,MAAOA,EACP6D,WAAY5D,EACZE,KAAMA,EACND,QAASA,EACTE,KAAMA,EACNC,YAAaA,EACb0D,WAAYD,IAER3E,EAAS,EACTC,GAAQ,EACRP,EAAO,CACXX,GAAIA,EACJa,KAAMA,EACNI,OAAQA,EACRC,MAAOA,EACPF,KAAMF,KAAK8D,UAAU,KAGvB,EAAKhC,MAAM5C,GAAMW,EAEjB,EAAKmD,aAAa9D,GAClB,EAAKgD,OAAOE,KAAK,aAAc,CAC7BC,YAAa,EAAK9B,YAClB+B,aAAc,EAAK9B,IACnB+B,YAAa,EAAKrD,GAClBW,KAAMA,SAGR,EAAKkD,MAAM,OAAQ7C,EAAK8E,QAAS,UAGpCb,OAAM,WACL,EAAKpB,MAAM,OAAQ,8BAA+B,WAGxDzB,eA5PO,WAwQL,OAXiB,MAAbK,KAAKR,OAE4B,GAAjCQ,KAAKR,KAAK8D,QAAQ,aACgB,GAAlCtD,KAAKR,KAAK8D,QAAQ,aAED,IAAbtD,KAAKR,OACPQ,KAAKR,KAAO,UAAYQ,KAAKR,MAKhB,KAAfQ,KAAKX,OACPW,KAAKoB,MAAM,OAAQ,sBAAuB,QACnC,GAEJmC,UAAUvD,KAAKX,OAIG,KAAnBW,KAAKV,WACPU,KAAKoB,MAAM,OAAQ,2BAA4B,QACxC,GAEJmC,UAAUvD,KAAKV,WAIC,KAAjBU,KAAKT,SAAmBgE,UAAUvD,KAAKT,SAK1B,IAAbS,KAAKP,MACF8D,UAAUvD,KAAKP,OAKtBO,KAAKwD,MAAMC,QAAQC,QACF,IAAb1D,KAAKR,MAA2B,MAAbQ,KAAKR,MAC1BgC,aAAamC,QAAQ,YAAa3D,KAAKR,WAEzCQ,KAAKgD,MACHhD,KAAKX,MACLW,KAAKV,UACLU,KAAKT,QACLS,KAAKR,KACLQ,KAAKP,KACLO,KAAKN,eAdHM,KAAKoB,MAAM,OAAQ,0BAA2B,QACvC,IAPTpB,KAAKoB,MAAM,OAAQ,6BAA8B,QAC1C,IALPpB,KAAKoB,MAAM,OAAQ,gCAAiC,QAC7C,IATPpB,KAAKoB,MAAM,OAAQ,2BAA4B,QACxC,IAkCXlC,QAhTO,SAgTCd,GACN4B,KAAKgD,MACH5E,EAAKiB,MACLjB,EAAK8E,WACL9E,EAAKmB,QACLnB,EAAKoB,KACLpB,EAAKqB,KACLrB,EAAKsB,cAGTP,WA1TO,SA0TI5B,UACFyC,KAAKG,MAAM5C,GAClByC,KAAKO,OAAOE,KAAK,cAAe,CAC9BC,YAAaV,KAAKpB,YAClB+B,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,GAClBsF,IAAK,CAACtF,KAERyC,KAAKmB,eAAe5D,IAEtB6B,KApUO,SAoUF7B,GACHyC,KAAKO,OAAOE,KAAK,YAAa,CAC5BC,YAAaV,KAAKpB,YAClBrB,GAAIA,MAIVqG,SAAU,CACR3F,cADQ,WAEN,OAAO6E,OAAOe,QAAQ7D,KAAKG,OAAO2D,YAGtCC,cAnWa,WAoWX/D,KAAKO,OAAOE,KAAK,oBAAqB,CACpCE,aAAcX,KAAKnB,IACnB+B,YAAaZ,KAAKzC,KAEpByC,KAAKO,OAAOC,IAAIR,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,IAC/DyC,KAAKO,OAAOC,IACVR,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,GAAK,eAEtDyC,KAAKO,OAAOC,IACVR,KAAKpB,YAAc,IAAMoB,KAAKnB,IAAM,IAAMmB,KAAKzC,GAAK,gBAEtDyC,KAAKO,OAAOC,IAAIR,KAAKpB,YAAc,mBAAqBoB,KAAKnB,MAI/DmF,QAnXa,WAoXXhE,KAAKuB,QAEP0C,QAtXa,WAuXPjE,KAAKkE,SACPlE,KAAKuB,OACLvB,KAAK2C,MAAMsB,a,qBC1hBjB,MAAME,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d0cf4e7.20606c3b.js","sourcesContent":["<template>\r\n  <div>\r\n    <h3>{{ id }}</h3>\r\n    <!-- Button trigger modal -->\r\n    <div class=\"btn-container\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        data-mdb-toggle=\"modal\"\r\n        data-mdb-target=\"#Modal\"\r\n      >\r\n        Start\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        id=\"stop-script-tests\"\r\n        @click=\"stopAll\"\r\n      >\r\n        Stop all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        id=\"delete-script-tests\"\r\n        @click=\"deleteAll\"\r\n      >\r\n        Delete all\r\n      </button>\r\n    </div>\r\n    <Test \r\n      v-for=\"test in reversedTests\"\r\n      :key=\"test[0]\"\r\n      :id=\"test[0]\"\r\n      :info=\"JSON.parse(test[1].info)\"\r\n      :data=\"JSON.parse(test[1].data)\"\r\n      :status=\"test[1].status\"\r\n      :valid=\"test[1].valid\"\r\n      :showPath=\"false\"\r\n      :url=\"url\"\r\n      :openfaasUrl=\"openfaasUrl\"\r\n      :pid=\"pid\"\r\n      :sid=\"id\"\r\n      :startMinimized=\"minimizeTests\"\r\n      :mobileAgent=\"mobileAgent\"\r\n      @restart=\"restart\"\r\n      @delete=\"deleteTest\"\r\n      @stop=\"stop(test[0])\"\r\n    ></Test>\r\n    <!-- Modal -->\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"Modal\"\r\n      tabindex=\"-1\"\r\n      aria-labelledby=\"ModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"ModalLabel\">Start</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form>\r\n              <!-- Users input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"users-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"users\"\r\n                />\r\n                <label class=\"form-label\" for=\"users-input\">Users</label>\r\n              </div>\r\n              <!-- Spawn rate input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"spawn-rate-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"spawnRate\"\r\n                />\r\n                <label class=\"form-label\" for=\"spawn-rate-input\"\r\n                  >Spawn rate</label\r\n                >\r\n              </div>\r\n              <!-- Workers input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"workers-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"workers\"\r\n                />\r\n                <label class=\"form-label\" for=\"workers-input\">Workers</label>\r\n              </div>\r\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\r\n                This will overwrite all hosts in your file\r\n              </div>\r\n              <!-- Host input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"host-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"host\"\r\n                />\r\n                <label class=\"form-label\" for=\"host-input\">Host</label>\r\n              </div>\r\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\r\n                If time is not set, the test will not stop automatically\r\n              </div>\r\n              <!-- Time input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"time-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"time\"\r\n                />\r\n                <label class=\"form-label\" for=\"time-input\"\r\n                  >Time in seconds</label\r\n                >\r\n              </div>\r\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\r\n                Descripe your test\r\n              </div>\r\n              <!-- Label input -->\r\n              <div class=\"form-outline mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"description-input\"\r\n                  class=\"form-control\"\r\n                  v-model=\"description\"\r\n                />\r\n                <label class=\"form-label\" for=\"description-input\"\r\n                  >Description</label\r\n                >\r\n              </div>\r\n              <!-- Submit button -->\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary btn-block\"\r\n                id=\"start-btn\"\r\n                @click=\"startFromModal\"\r\n              >\r\n                Start\r\n              </button>\r\n            </form>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary hidden\"\r\n              data-mdb-dismiss=\"modal\"\r\n              id=\"dismiss-btn\"\r\n              ref=\"dismiss\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Test from \"@/components/Test.vue\";\r\n\r\nexport default {\r\n  name: \"Script\",\r\n  components: {\r\n    Test,\r\n  },\r\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"minimizeTests\", \"update\", \"mobileAgent\"],\r\n  data() {\r\n    return {\r\n      id: this.$route.params.id,\r\n      pid: this.$route.params.pid,\r\n      tests: {},\r\n      users: \"\",\r\n      spawnRate: \"\",\r\n      workers: \"\",\r\n      host: \"\",\r\n      time: \"\",\r\n      description: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    register(test_ids) {\r\n      this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\r\n      this.socket.emit(\"register_script\", {\r\n        openfaasurl: this.openfaasUrl,\r\n        project_name: this.pid,\r\n        script_name: this.id,\r\n        test_ids: test_ids,\r\n      });\r\n      this.socket.on(\r\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id,\r\n        (msg) => {\r\n          if (IsJsonString(msg)) {\r\n            msg = JSON.parse(msg);\r\n            //console.log(msg);\r\n            if (msg.success) {\r\n              for (var i = 0; i < msg.tests.length; i++) {\r\n                const id = msg.tests[i].id;\r\n                if (id in this.tests) {\r\n                  const status = msg.tests[i].status;\r\n                  if (status === 0) {\r\n                    // not running\r\n                    this.disconnectTest(id);\r\n                    this.tests[id].status = 0;\r\n                  } else if (status === 1) {\r\n                    this.tests[id].data = msg.tests[i].data;\r\n                  } else if (status === 3) {\r\n                    // console.log(\"not valid\");\r\n                    this.tests[id].valid = false;\r\n                    this.$emit(\r\n                      \"info\",\r\n                      id + \": There was an error running this test\",\r\n                      \"red\"\r\n                    );\r\n                    this.disconnectTest(id);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      );\r\n      // console.log(\"script registered\");\r\n    },\r\n    registerTest(test_id) {\r\n      this.socket.emit(\"register_test\", {\r\n        openfaasurl: this.openfaasUrl,\r\n        project_name: this.pid,\r\n        script_name: this.id,\r\n        test_id: test_id,\r\n      });\r\n    },\r\n    disconnectTest(test_id) {\r\n      // console.log(\"disconnecting\");\r\n      this.socket.emit(\"disconnect_test\", {\r\n        openfaasurl: this.openfaasUrl,\r\n        project_name: this.pid,\r\n        script_name: this.id,\r\n        test_id: test_id,\r\n      });\r\n    },\r\n    init() {\r\n      //get host\r\n      this.host = localStorage.getItem(\"last_host\");\r\n      //mdb init\r\n      document.querySelectorAll(\".form-outline\").forEach((formOutline) => {\r\n        new mdb.Input(formOutline).init();\r\n      });\r\n      fetch(this.url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          command: 7,\r\n          project_name: this.pid,\r\n          script_name: this.id,\r\n        }),\r\n      })\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          if (data.success) {\r\n            //console.log(data)\r\n            var test_ids = [];\r\n            for (var test_id in data.tests) {\r\n              if (data.tests[test_id].status === 1) {\r\n                test_ids.push(data.tests[test_id].id);\r\n              }\r\n            }\r\n            this.register(test_ids);\r\n            // console.log(\"registering: \", test_ids);\r\n            this.tests = data.tests;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // console.log(e);\r\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\r\n        });\r\n      this.socket.on(\r\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\",\r\n        (msg) => {\r\n          // console.log(msg.id in this.tests);\r\n          if (msg.id in this.tests) return;\r\n          this.tests[msg.id] = msg;\r\n          this.registerTest(msg.id);\r\n        }\r\n      );\r\n      this.socket.on(\r\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\",\r\n        (msg) => {\r\n          // console.log(msg);\r\n          for (var i = 0; i < msg.length; i++) {\r\n            if (msg[i] in this.tests) {\r\n              delete this.tests[msg[i]];\r\n              this.disconnectTest(msg[i]);\r\n            }\r\n          }\r\n        }\r\n      );\r\n      this.socket.on(\r\n        this.openfaasUrl + \"_project_delete_\" + this.pid,\r\n        (msg) => {\r\n          this.$emit(\"info\", this.pid + \" is deleted\", \"green\");\r\n          this.$router.push({ name: \"Home\" });\r\n        }\r\n      );\r\n    },\r\n    stopAll() {\r\n      this.$root.setUpConfirmation(\r\n        this.id + \": Are you sure you want to stop all tests?\",\r\n        \"Stop\",\r\n        () => {\r\n          fetch(this.url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              command: 17,\r\n              project_name: this.pid,\r\n              script_name: this.id,\r\n            }),\r\n          })\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n              if (data.success) {\r\n                this.$emit(\"info\", \"Success\", \"green\");\r\n                this.socket.emit(\"disconnect_script\", {\r\n                  project_name: this.pid,\r\n                  script_name: this.id,\r\n                });\r\n                for (var key in this.tests) {\r\n                  this.tests[key].status = 0;\r\n                }\r\n              } else {\r\n                this.$emit(\"info\", \"There was an error stopping tests\", \"red\");\r\n              }\r\n            })\r\n            .catch(function () {\r\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\r\n            });\r\n        }\r\n      );\r\n    },\r\n    deleteAll() {\r\n      this.$root.setUpConfirmation(\r\n        this.id + \": Are you sure you want to delete all tests?\",\r\n        \"Delete\",\r\n        () => {\r\n          fetch(this.url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              command: 16,\r\n              project_name: this.pid,\r\n              script_name: this.id,\r\n            }),\r\n          })\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n              if (data.success) {\r\n                this.$emit(\"info\", \"Success\", \"green\");\r\n                this.socket.emit(\"disconnect_script\", {\r\n                  project_name: this.pid,\r\n                  script_name: this.id,\r\n                });\r\n                this.socket.emit(\"test_delete\", {\r\n                  openfaasurl: this.openfaasUrl,\r\n                  project_name: this.pid,\r\n                  script_name: this.id,\r\n                  ids: Object.keys(this.tests),\r\n                });\r\n                this.tests = {};\r\n              } else {\r\n                this.$emit(\"info\", \"There was an error deleting tests\", \"red\");\r\n              }\r\n            })\r\n            .catch(function () {\r\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\r\n            });\r\n        }\r\n      );\r\n    },\r\n    start(users, spawnRate, workers, host, time, description) {\r\n      fetch(this.url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          command: 5,\r\n          project_name: this.pid,\r\n          script_name: this.id,\r\n          users: parseInt(users),\r\n          spawn_rate: parseInt(spawnRate),\r\n          workers: parseInt(workers),\r\n          host: host,\r\n          time: parseInt(time),\r\n          description: description\r\n        }),\r\n      })\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          if (data.success) {\r\n            const id = data.id;\r\n            const startedAt = data.started_at;\r\n            const info = JSON.stringify({\r\n              users: users,\r\n              spawn_rate: spawnRate,\r\n              host: host,\r\n              workers: workers,\r\n              time: time,\r\n              description: description,\r\n              started_at: startedAt,\r\n            });\r\n            const status = 1;\r\n            const valid = true;\r\n            const test = {\r\n              id: id,\r\n              info: info,\r\n              status: status,\r\n              valid: valid,\r\n              data: JSON.stringify([]),\r\n            };\r\n            // console.log(test);\r\n            this.tests[id] = test;\r\n            // console.log(\"started: \", test);\r\n            this.registerTest(id);\r\n            this.socket.emit(\"test_start\", {\r\n              openfaasurl: this.openfaasUrl,\r\n              project_name: this.pid,\r\n              script_name: this.id,\r\n              test: test,\r\n            });\r\n          } else {\r\n            this.$emit(\"info\", data.message, \"red\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\r\n        });\r\n    },\r\n    startFromModal() {\r\n      if (this.host != null) {\r\n        if (\r\n          this.host.indexOf(\"http://\") == -1 &&\r\n          this.host.indexOf(\"https://\") == -1\r\n        ) {\r\n          if (this.host != \"\") {\r\n            this.host = \"http://\" + this.host;\r\n          }\r\n        }\r\n      }\r\n      // handle false inputs\r\n      if (this.users === \"\") {\r\n        this.$emit(\"info\", \"Users cant be empty\", \"red\");\r\n        return false;\r\n      }\r\n      if (!isInteger(this.users)) {\r\n        this.$emit(\"info\", \"Users must be an integer\", \"red\");\r\n        return false;\r\n      }\r\n      if (this.spawnRate === \"\") {\r\n        this.$emit(\"info\", \"Spawn rate cant be empty\", \"red\");\r\n        return false;\r\n      }\r\n      if (!isInteger(this.spawnRate)) {\r\n        this.$emit(\"info\", \"Spawn rate must be an integer\", \"red\");\r\n        return false;\r\n      }\r\n      if (this.workers !== \"\" && !isInteger(this.workers)) {\r\n        this.$emit(\"info\", \"workers must be an integer\", \"red\");\r\n        return false;\r\n      }\r\n\r\n      if (this.time != \"\") {\r\n        if (!isInteger(this.time)) {\r\n          this.$emit(\"info\", \"Time must be an integer\", \"red\");\r\n          return false;\r\n        }\r\n      }\r\n      this.$refs.dismiss.click();\r\n      if (this.host != \"\" && this.host != null) {\r\n        localStorage.setItem(\"last_host\", this.host);\r\n      }\r\n      this.start(\r\n        this.users,\r\n        this.spawnRate,\r\n        this.workers,\r\n        this.host,\r\n        this.time,\r\n        this.description\r\n      );\r\n    },\r\n    restart(info) {\r\n      this.start(\r\n        info.users,\r\n        info.spawn_rate,\r\n        info.workers,\r\n        info.host,\r\n        info.time,\r\n        info.description\r\n      );\r\n    },\r\n    deleteTest(id) {\r\n      delete this.tests[id];\r\n      this.socket.emit(\"test_delete\", {\r\n        openfaasurl: this.openfaasUrl,\r\n        project_name: this.pid,\r\n        script_name: this.id,\r\n        ids: [id],\r\n      });\r\n      this.disconnectTest(id);\r\n    },\r\n    stop(id) {\r\n      this.socket.emit(\"test_stop\", {\r\n        openfaasurl: this.openfaasUrl,\r\n        id: id,\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    reversedTests() {\r\n      return Object.entries(this.tests).reverse();\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    this.socket.emit(\"disconnect_script\", {\r\n      project_name: this.pid,\r\n      script_name: this.id,\r\n    });\r\n    this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\r\n    this.socket.off(\r\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\"\r\n    );\r\n    this.socket.off(\r\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\"\r\n    );\r\n    this.socket.off(this.openfaasUrl + \"_project_delete_\" + this.pid);\r\n    // console.log(\"script disconnected\");\r\n  },\r\n\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  updated() {\r\n    if (this.update) {\r\n      this.init();\r\n      this.$root.updated();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./Script.vue?vue&type=template&id=7e0f14b8\"\nimport script from \"./Script.vue?vue&type=script&lang=js\"\nexport * from \"./Script.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\MegaSync\\\\Dokumente\\\\Meine Unterlagen\\\\WWU Münster\\\\Fächer\\\\7 - WS 21\\\\Bachelorarbeit\\\\PTAS\\\\vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}