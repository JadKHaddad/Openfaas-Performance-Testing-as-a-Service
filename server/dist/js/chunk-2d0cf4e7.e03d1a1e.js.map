{"version":3,"sources":["webpack:///./src/views/project/Script.vue","webpack:///./src/views/project/Script.vue?3700"],"names":["class","type","data-mdb-toggle","data-mdb-target","id","tabindex","aria-labelledby","aria-hidden","for","style","data-mdb-dismiss","ref","stopAll","deleteAll","reversedTests","test","key","info","JSON","parse","data","status","valid","showPath","url","openfaasUrl","pid","sid","startMinimized","minimizeTests","restart","deleteTest","stop","users","spawnRate","workers","host","time","startFromModal","name","components","Test","props","this","$route","params","tests","methods","register","test_ids","socket","off","emit","openfaasurl","project_name","script_name","on","msg","IsJsonString","success","i","length","disconnectTest","$emit","registerTest","test_id","init","localStorage","getItem","document","querySelectorAll","forEach","formOutline","mdb","Input","fetch","method","body","stringify","command","then","json","push","catch","e","$router","$root","setUpConfirmation","ids","Object","keys","start","parseInt","spawn_rate","startedAt","started_at","message","replace","isInteger","$refs","dismiss","click","setItem","computed","entries","reverse","beforeUnmount","mounted","updated","update","__exports__","render"],"mappings":"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","file":"js/chunk-2d0cf4e7.e03d1a1e.js","sourcesContent":["<template>\n  <div>\n    <h3>{{ id }}</h3>\n    <!-- Button trigger modal -->\n    <div class=\"btn-container\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary\"\n        data-mdb-toggle=\"modal\"\n        data-mdb-target=\"#Modal\"\n      >\n        Start\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        id=\"stop-script-tests\"\n        @click=\"stopAll\"\n      >\n        Stop all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        id=\"delete-script-tests\"\n        @click=\"deleteAll\"\n      >\n        Delete all\n      </button>\n    </div>\n    <Test\n      v-for=\"test in reversedTests\"\n      :key=\"test[0]\"\n      :id=\"test[0]\"\n      :info=\"JSON.parse(test[1].info)\"\n      :data=\"JSON.parse(test[1].data)\"\n      :status=\"test[1].status\"\n      :valid=\"test[1].valid\"\n      :showPath=\"false\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :pid=\"pid\"\n      :sid=\"id\"\n      :startMinimized=\"minimizeTests\"\n      @restart=\"restart\"\n      @delete=\"deleteTest\"\n      @stop=\"stop(test[0])\"\n    ></Test>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"Modal\"\n      tabindex=\"-1\"\n      aria-labelledby=\"ModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"ModalLabel\">Start</h5>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <!-- Users input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"users-input\"\n                  class=\"form-control\"\n                  v-model=\"users\"\n                />\n                <label class=\"form-label\" for=\"users-input\">Users</label>\n              </div>\n              <!-- Spawn rate input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"spawn-rate-input\"\n                  class=\"form-control\"\n                  v-model=\"spawnRate\"\n                />\n                <label class=\"form-label\" for=\"spawn-rate-input\"\n                  >Spawn rate</label\n                >\n              </div>\n              <!-- Workers input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"workers-input\"\n                  class=\"form-control\"\n                  v-model=\"workers\"\n                />\n                <label class=\"form-label\" for=\"workers-input\">Workers</label>\n              </div>\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\n                This will overwrite all hosts in your file\n              </div>\n              <!-- Host input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"host-input\"\n                  class=\"form-control\"\n                  v-model=\"host\"\n                />\n                <label class=\"form-label\" for=\"host-input\">Host</label>\n              </div>\n              <div class=\"form-text\" style=\"padding-bottom: 10px\">\n                If time is not set, the test will not stop automatically\n              </div>\n              <!-- Time input -->\n              <div class=\"form-outline mb-4\">\n                <input\n                  type=\"text\"\n                  id=\"time-input\"\n                  class=\"form-control\"\n                  v-model=\"time\"\n                />\n                <label class=\"form-label\" for=\"time-input\"\n                  >Time in seconds</label\n                >\n              </div>\n              <!-- Submit button -->\n              <button\n                type=\"button\"\n                class=\"btn btn-primary btn-block\"\n                id=\"start-btn\"\n                @click=\"startFromModal\"\n              >\n                Start\n              </button>\n            </form>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary hidden\"\n              data-mdb-dismiss=\"modal\"\n              id=\"dismiss-btn\"\n              ref=\"dismiss\"\n            ></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Test from \"@/components/Test.vue\";\n\nexport default {\n  name: \"Script\",\n  components: {\n    Test,\n  },\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"minimizeTests\", \"update\"],\n  data() {\n    return {\n      id: this.$route.params.id,\n      pid: this.$route.params.pid,\n      tests: {},\n      users: \"\",\n      spawnRate: \"\",\n      workers: \"\",\n      host: \"\",\n      time: \"\",\n    };\n  },\n  methods: {\n    register(test_ids) {\n      this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\n      this.socket.emit(\"register_script\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_ids: test_ids,\n      });\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id,\n        (msg) => {\n          if (IsJsonString(msg)) {\n            msg = JSON.parse(msg);\n            //console.log(msg);\n            if (msg.success) {\n              for (var i = 0; i < msg.tests.length; i++) {\n                const id = msg.tests[i].id;\n                if (id in this.tests) {\n                  const status = msg.tests[i].status;\n                  if (status === 0) {\n                    // not running\n                    this.disconnectTest(id);\n                    this.tests[id].status = 0;\n                  } else if (status === 1) {\n                    this.tests[id].data = msg.tests[i].data;\n                  } else if (status === 3) {\n                    // console.log(\"not valid\");\n                    this.tests[id].valid = false;\n                    this.$emit(\n                      \"info\",\n                      id + \": There was an error running this test\",\n                      \"red\"\n                    );\n                    this.disconnectTest(id);\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n      // console.log(\"script registered\");\n    },\n    registerTest(test_id) {\n      this.socket.emit(\"register_test\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_id: test_id,\n      });\n    },\n    disconnectTest(test_id) {\n      // console.log(\"disconnecting\");\n      this.socket.emit(\"disconnect_test\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        test_id: test_id,\n      });\n    },\n    init() {\n      //get host\n      this.host = localStorage.getItem(\"last_host\");\n      //mdb init\n      document.querySelectorAll(\".form-outline\").forEach((formOutline) => {\n        new mdb.Input(formOutline).init();\n      });\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 7,\n          project_name: this.pid,\n          script_name: this.id,\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            //console.log(data)\n            var test_ids = [];\n            for (var test_id in data.tests) {\n              if (data.tests[test_id].status === 1) {\n                test_ids.push(data.tests[test_id].id);\n              }\n            }\n            this.register(test_ids);\n            // console.log(\"registering: \", test_ids);\n            this.tests = data.tests;\n          }\n        })\n        .catch((e) => {\n          // console.log(e);\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\",\n        (msg) => {\n          // console.log(msg.id in this.tests);\n          if (msg.id in this.tests) return;\n          this.tests[msg.id] = msg;\n          this.registerTest(msg.id);\n        }\n      );\n      this.socket.on(\n        this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\",\n        (msg) => {\n          // console.log(msg);\n          for (var i = 0; i < msg.length; i++) {\n            if (msg[i] in this.tests) {\n              delete this.tests[msg[i]];\n              this.disconnectTest(msg[i]);\n            }\n          }\n        }\n      );\n      this.socket.on(\n        this.openfaasUrl + \"_project_delete_\" + this.pid,\n        (msg) => {\n          this.$emit(\"info\", this.pid + \" is deleted\", \"green\");\n          this.$router.push({ name: \"Home\" });\n        }\n      );\n    },\n    stopAll() {\n      this.$root.setUpConfirmation(\n        this.id + \": Are you sure you want to stop all tests?\",\n        \"Stop\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({\n              command: 17,\n              project_name: this.pid,\n              script_name: this.id,\n            }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                this.socket.emit(\"disconnect_script\", {\n                  project_name: this.pid,\n                  script_name: this.id,\n                });\n                for (var key in this.tests) {\n                  this.tests[key].status = 0;\n                }\n              } else {\n                this.$emit(\"info\", \"There was an error stopping tests\", \"red\");\n              }\n            })\n            .catch(function () {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    deleteAll() {\n      this.$root.setUpConfirmation(\n        this.id + \": Are you sure you want to delete all tests?\",\n        \"Delete\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({\n              command: 16,\n              project_name: this.pid,\n              script_name: this.id,\n            }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                this.socket.emit(\"disconnect_script\", {\n                  project_name: this.pid,\n                  script_name: this.id,\n                });\n                this.socket.emit(\"test_delete\", {\n                  openfaasurl: this.openfaasUrl,\n                  project_name: this.pid,\n                  script_name: this.id,\n                  ids: Object.keys(this.tests),\n                });\n                this.tests = {};\n              } else {\n                this.$emit(\"info\", \"There was an error deleting tests\", \"red\");\n              }\n            })\n            .catch(function () {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    start(users, spawnRate, workers, host, time) {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 5,\n          project_name: this.pid,\n          script_name: this.id,\n          users: parseInt(users),\n          spawn_rate: parseInt(spawnRate),\n          workers: parseInt(workers),\n          host: host,\n          time: parseInt(time),\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            const id = data.id;\n            const startedAt = data.started_at;\n            const info = JSON.stringify({\n              users: users,\n              spawn_rate: spawnRate,\n              host: host,\n              workers: workers,\n              time: time,\n              started_at: startedAt,\n            });\n            const status = 1;\n            const valid = true;\n            const test = {\n              id: id,\n              info: info,\n              status: status,\n              valid: valid,\n              data: JSON.stringify([]),\n            };\n            // console.log(test);\n            this.tests[id] = test;\n            // console.log(\"started: \", test);\n            this.registerTest(id);\n            this.socket.emit(\"test_start\", {\n              openfaasurl: this.openfaasUrl,\n              project_name: this.pid,\n              script_name: this.id,\n              test: test,\n            });\n          } else {\n            this.$emit(\"info\", data.message, \"red\");\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n    },\n    startFromModal() {\n      if (this.host != null) {\n        this.host = this.host.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (this.host != \"\") {\n          this.host = \"http://\" + this.host;\n        }\n      }\n      // handle false inputs\n      if (this.users === \"\") {\n        this.$emit(\"info\", \"Users cant be empty\", \"red\");\n        return false;\n      }\n      if (!isInteger(this.users)) {\n        this.$emit(\"info\", \"Users must be an integer\", \"red\");\n        return false;\n      }\n      if (this.spawnRate === \"\") {\n        this.$emit(\"info\", \"Spawn rate cant be empty\", \"red\");\n        return false;\n      }\n      if (!isInteger(this.spawnRate)) {\n        this.$emit(\"info\", \"Spawn rate must be an integer\", \"red\");\n        return false;\n      }\n      if (this.workers !== \"\" && !isInteger(this.workers)) {\n        this.$emit(\"info\", \"workers must be an integer\", \"red\");\n        return false;\n      }\n\n      if (this.time != \"\") {\n        if (!isInteger(this.time)) {\n          this.$emit(\"info\", \"Time must be an integer\", \"red\");\n          return false;\n        }\n      }\n      this.$refs.dismiss.click();\n      if (this.host != \"\" && this.host != null) {\n        localStorage.setItem(\"last_host\", this.host);\n      }\n      this.start(\n        this.users,\n        this.spawnRate,\n        this.workers,\n        this.host,\n        this.time\n      );\n    },\n    restart(info) {\n      this.start(\n        info.users,\n        info.spawn_rate,\n        info.workers,\n        info.host,\n        info.time\n      );\n    },\n    deleteTest(id) {\n      delete this.tests[id];\n      this.socket.emit(\"test_delete\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: this.pid,\n        script_name: this.id,\n        ids: [id],\n      });\n      this.disconnectTest(id);\n    },\n    stop(id) {\n      this.socket.emit(\"test_stop\", {\n        openfaasurl: this.openfaasUrl,\n        id: id,\n      });\n    },\n  },\n  computed: {\n    reversedTests() {\n      return Object.entries(this.tests).reverse();\n    },\n  },\n  beforeUnmount() {\n    this.socket.emit(\"disconnect_script\", {\n      project_name: this.pid,\n      script_name: this.id,\n    });\n    this.socket.off(this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id);\n    this.socket.off(\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_start\"\n    );\n    this.socket.off(\n      this.openfaasUrl + \"_\" + this.pid + \"_\" + this.id + \"_test_delete\"\n    );\n    this.socket.off(this.openfaasUrl + \"_project_delete_\" + this.pid);\n    // console.log(\"script disconnected\");\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n\n<style>\n</style>","import { render } from \"./Script.vue?vue&type=template&id=0e44d84c\"\nimport script from \"./Script.vue?vue&type=script&lang=js\"\nexport * from \"./Script.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}