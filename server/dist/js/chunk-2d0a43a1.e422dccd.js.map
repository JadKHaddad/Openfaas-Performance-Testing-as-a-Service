{"version":3,"sources":["webpack:///./src/views/Control.vue","webpack:///./src/components/InstallationProcess.vue","webpack:///./src/components/InstallationProcess.vue?0085","webpack:///./src/views/Control.vue?5e4f"],"names":["class","type","id","killRunningTasks","deleteAllProjects","projects","project","key","url","openfaasUrl","socket","deleteProject","reversedTests","test","info","JSON","parse","data","status","valid","showPath","pid","project_name","sid","script_name","startMinimized","minimizeTests","restart","deleteTest","data-mdb-toggle","title","stop","name","props","socketIntv","methods","fetch","this","method","body","stringify","command","then","json","success","$root","showInfo","$emit","catch","beforeUnmount","clearInterval","mounted","setInterval","emit","openfaasurl","on","msg","status_code","console","log","error","__exports__","components","Test","InstallationProcess","tests","register","off","IsJsonString","Object","keys","length","init","i","setUpConfirmation","start","users","spawn_rate","workers","host","time","spawnRate","parseInt","startedAt","started_at","ids","filter","p","computed","entries","reverse","updated","update","render"],"mappings":"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","file":"js/chunk-2d0a43a1.e422dccd.js","sourcesContent":["<template>\n  <div>\n    <div class=\"control-btn-container\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-block control-btn\"\n        id=\"kill-btn\"\n        @click=\"killRunningTasks\"\n      >\n        Kill running tasks\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-block control-btn\"\n        id=\"cleanup-btn\"\n        @click=\"deleteAllProjects\"\n      >\n        Delete all projects\n      </button>\n    </div>\n    <InstallationProcess\n      v-for=\"project in projects\"\n      :key=\"project\"\n      :id=\"project\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :socket=\"socket\"\n      @delete=\"deleteProject(project)\"\n    >\n    </InstallationProcess>\n\n    <Test\n      v-for=\"test in reversedTests\"\n      :key=\"test[0]\"\n      :id=\"test[0]\"\n      :info=\"JSON.parse(test[1].info)\"\n      :data=\"JSON.parse(test[1].data)\"\n      :status=\"test[1].status\"\n      :valid=\"test[1].valid\"\n      :showPath=\"true\"\n      :url=\"url\"\n      :openfaasUrl=\"openfaasUrl\"\n      :pid=\"test[1].project_name\"\n      :sid=\"test[1].script_name\"\n      :startMinimized=\"minimizeTests\"\n      @restart=\"restart\"\n      @delete=\"deleteTest\"\n    ></Test>\n  </div>\n</template>\n\n<script>\nimport Test from \"@/components/Test.vue\";\nimport InstallationProcess from \"@/components/InstallationProcess.vue\";\n\nexport default {\n  name: \"Control\",\n  components: {\n    Test,\n    InstallationProcess,\n  },\n  props: [\"url\", \"openfaasUrl\", \"socket\", \"minimizeTests\", \"update\"],\n  data() {\n    return {\n      tests: {},\n      projects: [],\n    };\n  },\n  methods: {\n    register() {\n      this.socket.off(this.openfaasUrl + \"_control\");\n      this.socket.emit(\"register_control\", { openfaasurl: this.openfaasUrl });\n      this.socket.on(this.openfaasUrl + \"_control\", (msg) => {\n        if (IsJsonString(msg)) {\n          msg = JSON.parse(msg);\n          if (msg.success) {\n            if (\n              Object.keys(msg.tests).length >= Object.keys(this.tests).length\n            ) {\n              for (var key in msg.tests) {\n                //console.log(msg.tests[key]);\n                const id = msg.tests[key].id;\n                if (id in this.tests) {\n                  this.tests[id].data = msg.tests[key].data;\n                  this.tests[id].valid = msg.tests[key].valid;\n                } else {\n                  this.tests[id] = msg.tests[key];\n                }\n              }\n            } else {\n              for (var key in this.tests) {\n                if (key in msg.tests) {\n                  //console.log(msg.tests[key]);\n                  const id = msg.tests[key].id;\n                  if (id in this.tests) {\n                    this.tests[id].data = msg.tests[key].data;\n                    this.tests[id].valid = msg.tests[key].valid;\n                  } else {\n                    this.tests[id] = msg.tests[key];\n                  }\n                } else {\n                  this.tests[key].status = 0;\n                }\n              }\n            }\n          }\n        }\n      });\n      // console.log(\"control registered\")\n    },\n    init() {\n      //get running tests\n      fetch(this.url, { method: \"POST\", body: JSON.stringify({ command: 13 }) })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.tests = data.tests;\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      //get installing projects\n      fetch(this.url, { method: \"POST\", body: JSON.stringify({ command: 1 }) })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.projects = data.projects;\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n      this.register();\n      this.socket.on(this.openfaasUrl + \"_control_test_delete\", (msg) => {\n        for (var i = 0; i < msg.length; i++) {\n          if (msg[i] in this.tests) {\n            delete this.tests[msg[i]];\n          }\n        }\n      });\n      this.socket.on(this.openfaasUrl + \"_control_test_stop\", (msg) => {\n        if (msg in this.tests) {\n          this.tests[msg].status = 0;\n        }\n      });\n    },\n    killRunningTasks() {\n      this.$root.setUpConfirmation(\n        \"Kill all running tasks? Istallation tasks will also be killed\",\n        \"Kill\",\n        () => {\n          fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify({ command: 911 }),\n          })\n            .then((data) => data.json())\n            .then((data) => {\n              if (data.success) {\n                this.$emit(\"info\", \"Success\", \"green\");\n                for (var key in this.tests) {\n                  this.tests[key].status = 0;\n                }\n              } else {\n                this.$emit(\n                  \"info\",\n                  \"There was an error killing running tasks\",\n                  \"red\"\n                );\n              }\n            })\n            .catch(() => {\n              this.$emit(\"info\", \"Could not connect to server\", \"red\");\n            });\n        }\n      );\n    },\n    deleteAllProjects() {\n      this.$root.setUpConfirmation(\"Delete all projects?\", \"Delete\", () => {\n        fetch(this.url, {\n          method: \"POST\",\n          body: JSON.stringify({ command: 912 }),\n        })\n          .then((data) => data.json())\n          .then((data) => {\n            if (data.success) {\n              this.$emit(\"info\", \"Success\", \"green\");\n              this.tests = {};\n            } else {\n              this.$emit(\"info\", \"There was an error deleting projects\", \"red\");\n            }\n          })\n          .catch(() => {\n            this.$emit(\"info\", \"Could not connect to server\", \"red\");\n          });\n      });\n    },\n    restart(info, pid, sid) {\n      this.start(\n        info.users,\n        info.spawn_rate,\n        info.workers,\n        info.host,\n        info.time,\n        pid,\n        sid\n      );\n    },\n    start(users, spawnRate, workers, host, time, pid, sid) {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          command: 5,\n          project_name: pid,\n          script_name: sid,\n          users: parseInt(users),\n          spawn_rate: parseInt(spawnRate),\n          workers: parseInt(workers),\n          host: host,\n          time: parseInt(time),\n        }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            const id = data.id;\n            const startedAt = data.started_at;\n            const info = JSON.stringify({\n              users: users,\n              spawn_rate: spawnRate,\n              host: host,\n              workers: workers,\n              time: time,\n              started_at: startedAt,\n            });\n            const status = 1;\n            const valid = true;\n            const test = {\n              id: id,\n              info: info,\n              status: status,\n              valid: valid,\n              project_name: pid,\n              script_name: sid,\n              data: JSON.stringify([]),\n            };\n            this.tests[id] = test;\n            this.socket.emit(\"test_start\", {\n              openfaasurl: this.openfaasUrl,\n              project_name: pid,\n              script_name: sid,\n              test: test,\n            });\n          }\n        })\n        .catch(() => {\n          this.$emit(\"info\", \"Could not connect to server\", \"red\");\n        });\n    },\n    deleteTest(id, pid, sid) {\n      delete this.tests[id];\n      this.socket.emit(\"test_delete\", {\n        openfaasurl: this.openfaasUrl,\n        project_name: pid,\n        script_name: sid,\n        ids: [id],\n      });\n    },\n    deleteProject(project) {\n      this.projects = this.projects.filter((p) => p !== project);\n    },\n  },\n  computed: {\n    reversedTests() {\n      return Object.entries(this.tests).reverse();\n    },\n  },\n  beforeUnmount() {\n    this.socket.emit(\"disconnect_control\");\n    this.socket.off(this.openfaasUrl + \"_control\");\n    this.socket.off(this.openfaasUrl + \"_control_test_delete\");\n    this.socket.off(this.openfaasUrl + \"_control_test_stop\");\n    // console.log(\"control disconnected\")\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    if (this.update) {\n      this.init();\n      this.$root.updated();\n    }\n  },\n};\n</script>\n\n<style>\n</style>","<template>\n  <div class=\"card project-card\" :id=\"id\">\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div\n          class=\"col-10 project_name\"\n          data-mdb-toggle=\"tooltip\"\n          title=\"Project name\"\n        >\n          Installing project: {{ id }}\n        </div>\n        <div class=\"col-1\">\n          <div\n            class=\"spinner-border text-primary spinner\"\n            data-mdb-toggle=\"tooltip\"\n            title=\"Running\"\n          ></div>\n        </div>\n        <div class=\"col-1\" data-mdb-toggle=\"tooltip\" title=\"Cancel\">\n          <i class=\"fas fa-times stop-install-project\" @click=\"stop\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"InstallationProcess\",\n  props: [\"id\", \"url\", \"openfaasUrl\", \"socket\"],\n  data() {\n    return {\n      socketIntv: null,\n    };\n  },\n  methods: {\n    stop() {\n      fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify({ command: 15, project_name: this.id }),\n      })\n        .then((data) => data.json())\n        .then((data) => {\n          if (data.success) {\n            this.$root.showInfo(\n              this.id + \": installation canceled successfully\",\n              \"green\"\n            );\n            this.$emit(\"delete\");\n          } else {\n            this.$root.showInfo(\n              \"There was an error canceling the installation\",\n              \"red\"\n            );\n          }\n        })\n        .catch(() => {\n          this.$root.showInfo(\"Could not connect to server\", \"red\");\n        });\n    },\n  },\n  beforeUnmount() {\n    if (this.socketIntv) clearInterval(this.socketIntv);\n  },\n  mounted() {\n    this.socketIntv = setInterval(() => {\n      this.socket.emit(\"task_stats\", {\n        project_name: this.id,\n        openfaasurl: this.openfaasUrl,\n      });\n    }, 1000);\n    this.socket.on(this.id, (msg) => {\n      const data = JSON.parse(msg.data);\n      if (!data.success) {\n        console.log(\"Something went wrong\");\n        this.$root.showInfo(\"Something went wrong\", \"red\");\n        clearInterval(this.socketIntv);\n      } else if (data.status_code === 3) {\n        console.log(\"thread is locking\");\n      } else if (data.status_code === 2) {\n        console.log(\"installing project\");\n      } else if (data.status_code === 1) {\n        console.log(\"installing failed\");\n        clearInterval(this.socketIntv);\n        this.$root.showInfo(\n          \"Installation failed\",\n          \"red\",\n          data.error\n        );\n        this.$emit(\"delete\");\n      } else {\n        console.log(\"Task is finished\");\n        clearInterval(this.socketIntv);\n        this.$emit(\"delete\");\n        this.$root.showInfo(\"Installation successs\", \"green\");\n      }\n    });\n  },\n};\n</script>\n\n<style>\n</style>","import { render } from \"./InstallationProcess.vue?vue&type=template&id=354fbc13\"\nimport script from \"./InstallationProcess.vue?vue&type=script&lang=js\"\nexport * from \"./InstallationProcess.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Control.vue?vue&type=template&id=17efda6a\"\nimport script from \"./Control.vue?vue&type=script&lang=js\"\nexport * from \"./Control.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/jadkhaddad/Schreibtisch/Openfaas-Performance-Testing-as-a-Service/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}